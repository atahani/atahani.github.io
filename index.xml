<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>بلاگ احمد طحانی</title>
    <link>http://atahani.com/index.xml</link>
    <description>Recent content on بلاگ احمد طحانی</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fa</language>
    <copyright>Ahmad Tahani</copyright>
    <lastBuildDate>Thu, 16 Feb 2017 18:26:43 +0330</lastBuildDate>
    <atom:link href="http://atahani.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>معرفی Minio و استفاده از آن</title>
      <link>http://atahani.com/minio</link>
      <pubDate>Thu, 16 Feb 2017 18:26:43 +0330</pubDate>
      
      <guid>http://atahani.com/minio</guid>
      <description>

&lt;h1 id=&#34;معرفی-و-استفاده-از-minio&#34;&gt;معرفی و استفاده از Minio&lt;/h1&gt;

&lt;p&gt;متاسفانه سرویس‌های ابری آمازون برای ما ایرانی‌ها تحریم هست ( البته از طریق‌هایی می‌توان از آمازون سرویس گرفت ! ) به هر حال استفاده از چنین سرویس‌هایی واسه ماها تقریباً رویاست، پس خیلی سخته شما کسب‌وکار خودتان را برپایه سرویس ابری آمازون بنا کنید، یکی از سرویس‌های معروف آن &lt;a href=&#34;https://aws.amazon.com/s3/&#34;&gt;Amazon S3&lt;/a&gt;، یک Object Storage کارآمدی هست که کل دنیا ازش استفاده می‌کنند.
حالا اصلاً Object Storage چی هست ؟
به زبان ساده میشه گفت به جای اینکه شما به روش ساده فایل‌هایی مثل تصاویر، صوت و غیره رو ذخیره کنید، فایل را به عنوان یک Object در نظر می‌گیرید که در این صورت می‌توانید یک سری Metadata با آن فایل ذخیره نمایید، همچنین در این روش ذخیره‌سازی، می‌توان با استفاده از روش‌هایی عمل خواندن و نوشتن را به صورت توزیع شده پیاده‌سازی کرد، پس میشه گفت کاری پیچیده‌ای هست !
حالا این Metadata چی هست و به چه استفاده‌ای دارد ؟
در واقع Metadata یک Key/Value هست که می‌توانید به صورت string مقادیری را به همراه فایل در قالب یک Object ذخیره کنید، به عنوان مثال هنگامی که کاربری تصویری را آپلود می‌کند، می‌توان userID کاربر را داخل metadata گذاشت و بعد فایل را در قالب Object ذخیره کرد، در این حالت هنگامی که کاربر درخواست حذف فایل را داشته باشد، قبل از حذف می‌توان چک کرد که آیا این کاربر اجازه‌ی چنین کاری را دارد یا نه !؟ پس یکی از مشکلات همیشگی حل شد، حالا شما فکر کنید چنین قابلیتی چه کاربردهایی می‌تواند داشته باشد !&lt;/p&gt;

&lt;p&gt;شرکت‌های زیادی در دنیا از &lt;a href=&#34;https://en.wikipedia.org/wiki/Cloud_storage&#34;&gt;Cloud Storage&lt;/a&gt; هایی نظیر &lt;a href=&#34;https://aws.amazon.com/s3/&#34;&gt;Amazon S3&lt;/a&gt;، &lt;a href=&#34;https://cloud.google.com/storage/&#34;&gt;Google Cloud Storage&lt;/a&gt; بهره می‌برند، یا خودشان از پلتفرم‌های متن‌باز نظیر &lt;a href=&#34;https://docs.openstack.org/developer/swift/&#34;&gt;OpenStack Swift&lt;/a&gt; استفاده می‌کنند.&lt;/p&gt;

&lt;p&gt;استفاده از سرویس‌های ابری موجود که واسه ما ایرانی‌ها مقدور نیست، پس باید از طریق ابزارهای متن‌باز چنین امکانی را برای خومان فرآهم کنیم، راه‌اندازی &lt;a href=&#34;https://docs.openstack.org/developer/swift/&#34;&gt;OpenStack Swift&lt;/a&gt; هم دردسرهای فراوانی دارد، اینجاست که &lt;a href=&#34;https://minio.io/&#34;&gt;Minio.io&lt;/a&gt; به کمک ما میاد.&lt;/p&gt;

&lt;p&gt;هدف &lt;a href=&#34;https://github.com/harshavardhana&#34;&gt;توسعه‌دهنده&lt;/a&gt; Minio این بوده که شما به راحتی بتوانید یک Object Storage مثل Amazon S3 با همان استاندارد API داشته باشید، همچنین می‌خواسته فوق‌العاده سریع و جمع و جور باشه، و بتوان به راحتی راه‌ اندازی کرد، او با استفاده از زبان Go چنین ابزاری را ساخته و به &lt;a href=&#34;https://github.com/minio&#34;&gt;صورت متن‌باز&lt;/a&gt; منتشر کرده.
واسه اطلاعات بیشتر می‌توانید &lt;a href=&#34;https://www.youtube.com/watch?v=p1dDGWwGCqs&#34;&gt;این ویدیو&lt;/a&gt; را ببینید.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://docs.minio.io/docs/minio-quickstart-guide&#34;&gt;راه‌اندازی minio&lt;/a&gt; فوق‌العاده راحت هست، کل آن یک باینری فایل هست و شما می‌توانید روی پلتفرم‌های مختلف اجرایش کنید.
مثلاً برای اجرای آن روی مک کافیه شما از طریق brew آن را نصب و بعد یه دایرکتوری برایش در نظر بگیرید:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew install minio
minio server ~/Photos
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;همچنین می‌توانید از طریق &lt;a href=&#34;http://docker.com&#34;&gt;داکر&lt;/a&gt; minio را اجرا کنید:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker pull minio/minio
docker run -p 9000:9000 minio/minio server /export
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;بعد از اجرا به صورت تصادفی یک AccessKey و SecretKey اختصاص می‌دهد.&lt;/p&gt;

&lt;p&gt;شما می‌توانید از &lt;a href=&#34;https://docs.minio.io/docs/minio-client-quickstart-guide&#34;&gt;طریق کامندلاین&lt;/a&gt; به minio دسترسی داشته باشید.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;go get -u github.com/minio/mc
mc config host add minio http://127.0.0.1 AccessKey SecretKey Region
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;و یا از طریق مرورگر می‌توانید به آن دسترسی داشته باشید، Bucket بسازید، فایل آپلود کنید و یا برای Bucket ها یک سری Policy تعریف کنید. ( جالبه بدانید کلاینت وب آن با &lt;a href=&#34;https://facebook.github.io/react/&#34;&gt;ReactJS&lt;/a&gt; نوشته شده، دلیل حجم بالای باینری &lt;a href=&#34;http://minio.io&#34;&gt;minio&lt;/a&gt; هم همین فایل‌های کلاینت وب‌ آن است، که از طریق ابزار &lt;a href=&#34;https://github.com/jteeuwen/go-bindata&#34;&gt;go-bindata&lt;/a&gt; به صورت واحد در یک باینری فایل bind شده.)&lt;/p&gt;

&lt;p&gt;در این پست می‌خواهیم یک وب‌سرور ساده با زبان Go بنویسیم که یک فرم دریافت فایل داشته باشد، تصویر آپلود شده را گرفته و بعد در &lt;a href=&#34;http://minio.io&#34;&gt;minio&lt;/a&gt; ذخیره نماید. دقیقاً کاری که شما می‌توانید با Amazon S3 انجام دهید، چرا که minio یک API مشابه Amazon S3 برای شما فرآهم کرده است !&lt;/p&gt;

&lt;p&gt;در مثال زیر با استفاده از یک وب سرور ساده یک Handler نوشته شده که دو متد POST و GET را هندل کند.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package main

import (
        &amp;quot;fmt&amp;quot;
        &amp;quot;log&amp;quot;
        &amp;quot;net/http&amp;quot;

        &amp;quot;github.com/minio/minio-go&amp;quot;
)

func main() {

        endpoint := &amp;quot;127.0.0.1:9000&amp;quot;
        accessKeyID := &amp;quot;PH1Z8A1VR1IVHC93QAMT&amp;quot;
        secretAccessKey := &amp;quot;6pp2bahfp/1t2V+mASiOb+OEpHxhxgRLa2pHreA/&amp;quot;
        useSSL := false

        // Initialize minio client object.
        mClient, err := minio.New(endpoint, accessKeyID, secretAccessKey, useSSL)
        if err != nil {
                log.Fatalln(err)
        }
        // initial MinioTest type
        m := MinioTest{
                MinioClient:   mClient,
                PublicBaseURL: fmt.Sprintf(&amp;quot;http://%s&amp;quot;, endpoint),
        }
        // handle upload file at &amp;quot;/&amp;quot; route
        http.HandleFunc(&amp;quot;/&amp;quot;, m.UploadFile)
        http.ListenAndServe(&amp;quot;:8080&amp;quot;, nil)
}

// MinioTest type with MinioClient
type MinioTest struct {
        MinioClient   *minio.Client
        PublicBaseURL string
}

// UploadFile upload file
func (m *MinioTest) UploadFile(w http.ResponseWriter, req *http.Request) {
        // we can use from html template !
        s := `&amp;lt;form action=&amp;quot;/&amp;quot; method=&amp;quot;post&amp;quot; enctype=&amp;quot;multipart/form-data&amp;quot;&amp;gt;
        upload a file&amp;lt;br&amp;gt;
        &amp;lt;input type=&amp;quot;file&amp;quot; name=&amp;quot;file&amp;quot;&amp;gt;&amp;lt;br&amp;gt;
        &amp;lt;input type=&amp;quot;submit&amp;quot;&amp;gt;
        &amp;lt;/form&amp;gt;
        &amp;lt;br&amp;gt;
        &amp;lt;br&amp;gt;`
        // set text/html header as contentType to see it in browser
        w.Header().Set(&amp;quot;CONTENT-TYPE&amp;quot;, &amp;quot;text/html; charset=UTF-8&amp;quot;)

        // check the request method
        if req.Method == http.MethodPost {
                // get file from form
                f, _, err := req.FormFile(&amp;quot;file&amp;quot;)
                if err != nil {
                        log.Println(err)
                        http.Error(w, &amp;quot;error uploading file&amp;quot;, http.StatusInternalServerError)
                        return
                }
                defer f.Close()

                // NOTE: already create bucket named &#39;images&#39; via browser :) and set ReadOnly policy for this bucket

                objectName := &amp;quot;newfile.jpeg&amp;quot;
                bucketName := &amp;quot;images&amp;quot;

                // NOTE: since we have ReadOnly policy with &#39;*&#39; prefix in images bucket can serve image via public url
                publicURL := fmt.Sprintf(&amp;quot;%s/%s/%s&amp;quot;, m.PublicBaseURL, bucketName, objectName)

                // File have implement Read(p []byte) (n int, err error) method so we can use it as io.Reader
                // method signature PutObject(bucketName, objectName string, reader io.Reader, contentType string)(n int64, err error)
                n, err := m.MinioClient.PutObject(bucketName, objectName, f, &amp;quot;image/jpeg&amp;quot;)
                if err != nil {
                        log.Fatalln(err)
                        http.Error(w, &amp;quot;error on put object to minio&amp;quot;, http.StatusInternalServerError)
                }
                // NOTE: to save metadata with object should use from PutObjectWithMetadata
                // PutObjectWithMetadata(bucketName, objectName string, reader io.Reader, metaData map[string][]string, progress io.Reader) (n int64, err error)

                log.Printf(&amp;quot;successfully uploaded - size %d&amp;quot;, n)
                // put it into response as image
                fmt.Fprintf(w, s+`
                        &amp;lt;img src=&amp;quot;%s&amp;quot; /&amp;gt;
                `, publicURL)
                return
        }
        // write s to ResponseWriter in GET method
        fmt.Fprintf(w, s)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;*&lt;a href=&#34;http://docs.minio.io/&#34;&gt;داکیونت&lt;/a&gt; فوق‌العاده خوبی داره.&lt;/p&gt;

&lt;p&gt;پس از طریق minio می‌توانید به راحتی یک Object Storage مثل Amazon S3 روی سیستم شخصی و یا سرور خودتان داشته باشد.
نکته‌ی آخر اینکه سرویسی وطنی به نام &lt;a href=&#34;http://clouds.filecorn.com/&#34;&gt;مکعب&lt;/a&gt; توسط بچه‌های ایرانی توسعه داده شده، تازه اول راه هستند و قابلیت‌های یک Object Storage کامل رو نداره، ولی روند رشد آن امیدوار کنندست، حتی در حال حاضر &lt;a href=&#34;http://filecorn.api-docs.io/&#34;&gt;یک API ساده&lt;/a&gt; برای آن توسعه داده‌اند.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>شروع کمپین دوستی با کد</title>
      <link>http://atahani.com/campaign_code</link>
      <pubDate>Mon, 03 Oct 2016 23:07:33 +0330</pubDate>
      
      <guid>http://atahani.com/campaign_code</guid>
      <description>&lt;p&gt;✋ برای اطلاعات بیشتر به &lt;a href=&#34;http://dostibacode.ir/&#34;&gt;وب‌سایت دوستی‌باکد&lt;/a&gt; مراجعه فرمایید ✋&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  معضل نبود نیروی‌کار در حوزه آی‌تی فوق‌العاده جدی شده، وب‌سایت‌های آگهی استخدام مثل &lt;a href=&#34;https://jobinja.ir&#34;&gt;جابینجا&lt;/a&gt; و یا &lt;a href=&#34;https://atbox.io&#34;&gt;AtBox&lt;/a&gt; پر شده از آگهی استخدام، ولی نیروی کار فنی خوب اصلاً نیست، حتی خیلی‌ها به این نتیجه رسیدن که دیگه نباید دنبال نیروی فنی حرفه‌ای گشت، بهتره یه جوان باهوش و با قدرت یادگیری خوب به عنوان کارآموز استخدام کرد، پرورش داد و از وجود او استفاده کرد، ولی باورتان نمی‌شود که در شهرستان‌هایی مثل اصفهان همین نیروی مناسب برای کارآموزی هم خیلی سخت گیر می‌آید.
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  &lt;p&gt;چند هفته پیش یه فکری به ذهنم رسید، آن هم اینکه می‌توانیم با کمک دوستان فعال یک جنبشی به راه‌بیندازیم. حالا چه طوری ؟!&lt;/p&gt;

&lt;/p&gt;


&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  &lt;h3 id=&#34;قبل-از-همه-مخاطبین-این-کمپین-کیا-هستند&#34;&gt;قبل از همه مخاطبین این کمپین کیا هستند ؟&lt;/h3&gt;

&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  دانشجویان رشته‌های مرتبط با IT و در کل تازه‌کارانی که پتانسیل برنامه‌نویسی شدن را دارند.
&lt;/p&gt;
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  &lt;h3 id=&#34;حالا-چه-طوری&#34;&gt;حالا چه طوری ؟&lt;/h3&gt;

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  خیلی ساده الان بیشتر ملت به اینترنت پر سرعت دسترسی دارند یا حداقل یه نت خوب داخل دانشگاه‌ها پیدا میشه، پس مشکل دیدن ویدیو ندارند. هر شخصی ( حتی شما دوست عزیز ) یک ویدیوی کوتاه درباره موضوعی تهیه می‌کنید، لازم نیست حرفه‌ای ویرایش شده باشه، همین که &lt;code&gt;چهره‌ی شما + صفحه‌ی سیستم&lt;/code&gt; برای نمایش موارد باشه کافیه، مثل &lt;a href=&#34;https://www.youtube.com/channel/UCgKePkWtPuF36bJy0n2cEMQ&#34;&gt;ویدیوهای جادی&lt;/a&gt;.
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  &lt;h3 id=&#34;خوب-اصلا-درباره-چه-موضوعاتی-ویدیو-تهیه-کنیم&#34;&gt;خوب اصلاً درباره چه موضوعاتی ویدیو تهیه کنیم ؟&lt;/h3&gt;

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  هر موضوعی که فکر می‌کنید برای یه تازه‌کار و یا یه دانشجو مهم و سرنخ تلقی می‌شود!
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  مثلاً موضوعاتی که خودم قصد دارم تهیه کنیم این موارد هست :
&lt;/p&gt;


&lt;ul&gt;
&lt;li&gt;وضعیت کنونی بازارکار آی‌تی ایران.&lt;/li&gt;
&lt;li&gt;اصلاً دانشگاه به درد شما می‌خورد یا نه ؟&lt;/li&gt;
&lt;li&gt;چگونه اشکالات برنامه‌نویسی خودمان را از اینترنت پیدا کنیم.&lt;/li&gt;
&lt;li&gt;واسه توسعه اندروید از کجا شروع کنیم.&lt;/li&gt;
&lt;li&gt;بک‌اند / فرانت‌اند چیه و به کی میگن ؟!&lt;/li&gt;
&lt;/ul&gt;

&lt;p align=&#34;justify&#34;&gt;
  دقت کنید تجربیات کسانی چون ما که یک بار این راه‌ها را رفتیم می‌توانه فوق‌العاده به تازه‌کاران کمک کند، لازم به ذکر که در این کمپین افراد می‌توانند برای موضوعات تکراری باز ویدیو تهیه کرده و نظرات خودشان را بیان کنند، مثلاً می‌توانیم چندین ویدیو برای موضوع &lt;code&gt;اصلاً دانشگاه به درد می‌خورد یا نه&lt;/code&gt; داشته باشیم !
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  &lt;h3 id=&#34;حالا-ویدیوها-را-کجا-بزاریم&#34;&gt;حالا ویدیوها را کجا بزاریم ؟&lt;/h3&gt;

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  یوتیوب که فیلتر هست، پس به ناچار از آپارات استفاده می‌کنیم.
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  پ‌ن: آپارات محدودیت کاراکتر در توضیحات دارد و همین فوق‌العاده برای ما مشکل ساز خواهد بود، پس مجبور خواهیم بود لینک‌ها در پست مربوطه جداگانه نوشته شود!
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  &lt;h3 id=&#34;بعد-کجا-این-ویدیوها-را-جمع-کنیم&#34;&gt;بعد کجا این ویدیوها را جمع کنیم ؟&lt;/h3&gt;

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  برای اینکه مشکلات هاست و این حرف‌ها را نداشته باشیم و کار هم ساده پیش برود، به نظر من بهتره به وسیله یک &lt;code&gt;static generator&lt;/code&gt; مثل &lt;a href=&#34;gohugo.io&#34;&gt;Hugo&lt;/a&gt; و طراحی یا تغییر یک پوسته ساده کل وب سایت این کمپین را روی &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt; بگذاریم، بعد دوستان fork می‌کنند و لینک‌ ویدیو + لینک منابعی که در ویدیو گفته شده را commit و &amp;hellip;. می‌کنند.
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  &lt;h4 id=&#34;شرایط-پیشنهادی-برای-تهیه-ویدیو&#34;&gt;شرایط پیشنهادی برای تهیه ویدیو :&lt;/h4&gt;

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;مطالب خیلی ساده و قابل فهم برای مبتدیان بیان شود.&lt;/li&gt;
&lt;li&gt;موارد خیلی کوتاه عنوان شود، هدف سرنخ دادن به تازه‌کاران هست نه آموزش به آنها !&lt;/li&gt;
&lt;li&gt;لازم نیست اسلاید تهیه کنید.&lt;/li&gt;
&lt;li&gt;دقیقاً فکر کنید دارید برای یک کارآموز نقشه راه تعیین می‌کنید، اینکه از کجا شروع کند و چگونه می‌تواند حرفه‌ای بشود.&lt;/li&gt;
&lt;li&gt;نکات کلیدی در توسعه آن زبان برنامه‌نویسی و یا تکنولوژی را ذکر کنید، همان‌هایی که فکر می‌کنید دانستن آن ضروری هست.&lt;/li&gt;
&lt;li&gt;منابع آموزشی که فکر می‌کنید برای آموختن آن زبان و یا تکنولوژی مفید است را بیان کنید.&lt;/li&gt;
&lt;li&gt;فیلم‌ها خودمانی تهیه شود، مثلاً یکی مثل من با لهجه اصفهانی راحت حرف بزنه، بیخیال جدی بودن، چرا که تولید ویدیو سخت می‌شود. یه چیزی مثل جادی 😊&lt;/li&gt;
&lt;/ul&gt;

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  خوب وقتی که چندین ویدیو در این کمپین ایجاد شد، می‌توان به عنوان یه مرجع به تازه‌کاران معرفی کرد، حتی وقتی یه نفر از شما می‌پرسد چه طوری می‌توانم شروع به توسعه‌اپلیکشن‌های اندرویدی بکنم ؟ شما کافیه لینک مربوطه را واسش ایمیل کنید.
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  حتی اگه دانشگاه‌ها همکاری کنند می‌توان همایش‌های رایگانی رو ترتیب داد تا دانشجویان را با این کمپین آشنا کنیم !
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  &lt;h3 id=&#34;حالا-فرض-می-کنیم-به-بهترین-روش-ممکن-چنین-جنبشی-را-راه-انداختیم-بعداز-گذر-یکی-دو-سال-چه-تاثیراتی-را-خواهیم-دید&#34;&gt;حالا فرض می‌کنیم به بهترین روش ممکن چنین جنبشی را راه انداختیم بعداز گذر یکی دو سال چه تاثیراتی را خواهیم دید ؟&lt;/h3&gt;

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;دانشجوی ( پر تلاش، نه اینکه اصلاً حال و علاقه هیچ کاری را نداشته باشه ) رشته نرم‌افزار و یا آی‌تی نمی‌بینیم که در طول تحصیل به درس‌های دانشگاه اکتفا کرده باشد و بعد از فارق‌التحصیلی بفهمد که هیچی بلد نیست و اصلاً بازارکار با دانش ناچیزش یک سال نوری فاصله دارد !&lt;/li&gt;
&lt;li&gt;حجت به آن تازه‌کاران هم تمام می‌شود که برای استخدام در یک موقعیت خاص چه چیزهایی باید بلد باشند.&lt;/li&gt;
&lt;li&gt;انتظار داریم کمتر با رزومه‌های عجیب روبه رو شویم.&lt;/li&gt;
&lt;li&gt;غرور تازه‌کاران خوابیده و فهمیده‌اند که حرف اول را تخصص، تجربه و خلاقیت می‌زنه، نه مدرک دانشگاهی &amp;hellip;&lt;/li&gt;
&lt;li&gt;تازه‌کاران آن نمودار معروف رو درک کرده و فهمیده‌اند در انجام یک پروژه است که می‌فهمی چه کاره هستی نه با یادگیری سینتکس یک زبان !&lt;/li&gt;
&lt;li&gt;تاز‌ه‌کاران به خودآموزی تشویق شده‌اند و دیگر خودشان با سرعت دنبال یادگیری تکنیک‌ها هستند.&lt;/li&gt;
&lt;li&gt;بازار جذب کارآموز خیلی بهتر می‌شود، چرا که یک سری بیشتر راه را رفته‌اند، دیگه خیلی پرت نیستند.&lt;/li&gt;
&lt;li&gt;تاثیرات اندکی هم در بهبود بازارکار نیروی‌ فنی شاهد خواهیم بود.&lt;/li&gt;
&lt;/ul&gt;

&lt;/p&gt;


&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  پ‌ن: البته می‌دانم این چشم‌انداز خیلی ایده‌آل گرایانه است، ولی خوب به درصدی از این‌ها هم برسیم خیلی عالیه.
&lt;/p&gt;
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  حالا که وقت گذاشتین و این مطلب را خواندید، ممنون می‌شوم نظرتان را درباره چنین جنبشی بگویید و اینکه آیا فکر می‌کنید چنین کاری جواب می‌دهد یا نه ؟! و یا چه روشی رو برای بهتر کردن آن پیشنهاد می‌دهید ؟!
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  کلاً هر چی به ذهنتان می‌رسه رو کامنت کنید  🙏
&lt;/p&gt;

</description>
    </item>
    
    <item>
      <title>ایجاد یک کلاستر با docker swarm</title>
      <link>http://atahani.com/cluster-with-docker-swarm</link>
      <pubDate>Thu, 01 Sep 2016 22:04:27 +0430</pubDate>
      
      <guid>http://atahani.com/cluster-with-docker-swarm</guid>
      <description>&lt;p align=&#34;justify&#34;&gt;
  سه‌شنبه نهم شهریور در اولین همایش داکر درباره docker swarm ارائه‌ای داشتم، چون قرار بود برای آن دمویی داشته باشیم و &lt;code&gt;RAM&lt;/code&gt; سیستم پایین بود (۴ گیگ) ریسک نکردم و از ارائه فیلم نگرفتم، برای همین در این پست سعی می‌کنم مراحل دموی ارائه شده که ایجاد یک کلاستر با &lt;code&gt;swarm&lt;/code&gt; بود رو به صورت کامل بنویسم.
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  اول از همه اگر با داکر آشنا نیستید، می‌توانید در &lt;a href=&#34;https://faranesh.com/programming/14863-docker-in-action&#34;&gt;دوره‌ی آشنایی با داکر وب سایت فرانش&lt;/a&gt; 😎 ثبت‌نام کنید.
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  اسلاید ارائه را هم می‌توانید در &lt;a href=&#34;http://goo.gl/a9pmAJ&#34;&gt;گوگل اسلاید&lt;/a&gt; ببینید.
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  پروژه‌ی داکر swarm از سال گذشته روی &lt;a href=&#34;https://github.com/docker/swarm&#34;&gt;این مخزن&lt;/a&gt; توسعه‌داده شد، شرکت داکر برای سرویس‌ها ابری خودش از آن استفاده می‌کرد، همچنین با stable شدن آن شرکت‌های دیگری نیز از آن در دنیای واقعی استفاده کردند، در طی این یک سال بهبود‌هایی در زمنیه شبکه، امنیت، service discovery در داکر swarm انجام شد، همچنین شرکت‌ داکر برای ترقیب کاربران به استفاده از آن، به کل swarm را به docker منتقل کرد به گونه‌ای که در &lt;a href=&#34;https://blog.docker.com/2016/06/docker-1-12-built-in-orchestration/&#34;&gt;ورژن 1.12&lt;/a&gt; شما در سه سوت می‌توانید یک کلاستر swarm راه‌اندازی کنید. نکته‌ای که باید بهش اشاره کرده این هست که توسعه swarm در &lt;a href=&#34;https://github.com/docker/swarm&#34;&gt;مخزن اصلی&lt;/a&gt; آن همچنان ادامه دارد ! در اینجا بحث اصلی استفاده از راهکار ارائه شده در docker ورژن 1.12 است.
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  اول از همه یک http سرور خیلی خیلی ساده با &lt;a href=&#34;http://atahani.com/golang-intro/&#34;&gt;زبان گو&lt;/a&gt; داریم که ازش به عنوان برنامه‌ اجرایی در این دمو استفاده می‌کنیم 👇
&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;package main

import (
	&amp;quot;fmt&amp;quot;
	&amp;quot;io&amp;quot;
	&amp;quot;log&amp;quot;
	&amp;quot;net/http&amp;quot;
	&amp;quot;os&amp;quot;
)

func hello(res http.ResponseWriter, req *http.Request) {
	hostName, err := os.Hostname()
	if err != nil {
		log.Fatalln(err)
	}
	// io.WriteString(res, fmt.Sprintf(&amp;quot;Hello world from 👉 %v 👈  &amp;quot;, hostName))
	io.WriteString(res, fmt.Sprintf(&amp;quot;Hello world from 👉 %v 👈 containerID 🐋 &amp;quot;, hostName))
}

func main() {
	http.HandleFunc(&amp;quot;/&amp;quot;, hello)
	http.ListenAndServe(&amp;quot;:80&amp;quot;, nil)
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p align=&#34;justify&#34;&gt;
  خوبی زبان گو این هست که شما می‌توانید از برنامه‌ی خود یک باینری مناسب برای کانتینر ایجاد کنید و بعد در سه خط Dockerfile یک ایمیج خیلی رژیم گرفته ایجاد کنید، مثلاً ایمیج این برنامه شد &lt;code&gt;5.63MB&lt;/code&gt; 👌
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  برای تولید باینری مناسب کانتینر دستور &lt;code&gt;go build&lt;/code&gt; را با این سوییچ‌ها و envها به صورت زیر اجرا کنید:
&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o hello-world
&lt;/code&gt;&lt;/pre&gt;

&lt;p align=&#34;justify&#34;&gt;
  حال که باینری فایل مورد نظر &lt;code&gt;hello-world&lt;/code&gt; را داریم، کافیه یک &lt;code&gt;Dockerfile&lt;/code&gt; سه خطی بنوسید و بعد هم ایمیج رو بسازید!
&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;FROM scratch
ADD hello-world /
# default port for hello-world is 80
CMD [&amp;quot;/hello-world&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p align=&#34;justify&#34;&gt;
  دقت کنید چون برنامه در قالب یک باینری فایل هست، شما دیگر از base ایمیج خاصی استفاده نمی‌کنید و همانند ایمیج‌هایی مثل &lt;a href=&#34;https://github.com/tianon/docker-brew-debian/blob/589b967ff4364528ebd686b002a6ee00f00f4657/jessie/Dockerfile&#34;&gt;debian&lt;/a&gt; از &lt;code&gt;scratch&lt;/code&gt; ساخته می‌شود. 💪
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  واسه ایجاد کلاستر یه ubuntu server به صورت مجازی نصب می‌کنیم و بعد فقط کافیه &lt;a href=&#34;https://docs.docker.com/engine/installation/linux/ubuntulinux/&#34;&gt;داکر را روی آن نصب کنیم&lt;/a&gt;، همچنین واسه راحتی کار SSH را روی آن اوکی می‌کنیم تا از طریق &lt;code&gt;SHELL&lt;/code&gt; خود هاست به آن وصل بشویم.
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  برای راحتی ۲ سرور مجازی دیگر از روی‌ آن &lt;code&gt;clone&lt;/code&gt; می‌کنیم  😁 الان هر سه نود مورد احتیاج برای این دمو را داریم، یکی از نودها رو به عنوان &lt;code&gt;swarm manager&lt;/code&gt; انتخاب می‌کنیم و روی آن دستور زیر را اجرا می‌کنیم
&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;docker swarm init
&lt;/code&gt;&lt;/pre&gt;

&lt;p align=&#34;justify&#34;&gt;
  حالا به شما می‌گوید که می‌توانید برای اضافه‌کردن نودهای دیگر به عنوان &lt;code&gt;worker&lt;/code&gt; دستور زیر را در نودهای دیگر وارد نمایید، روی دو نود دیگر این دستور رو اجرا می‌کنیم.
&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;docker swarm join \
    --token SWMTKN-1-2t7lf1rv07ht8j5sbt7q4yssbqiaqgeop8yplaaelywyqh6bcm-6k0a07wq8ey7xf85td9cfgwlj \
    192.168.0.59:2377
&lt;/code&gt;&lt;/pre&gt;

&lt;p align=&#34;justify&#34;&gt;
  برای نمایش وضعیت نودها و کانتینرهایی که در آن اجرا می‌شود از &lt;a href=&#34;https://github.com/ManoMarks/docker-swarm-visualizer&#34;&gt;یک ویژولایزر&lt;/a&gt; استفاده می‌کنیم، برای اجرای آن ایمیج داکر آن را اجرا می‌کنیم:
&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;docker run -it -d -p 8080:8080 -e HOST=[YOURHOST] -v /var/run/docker.sock:/var/run/docker.sock manomarks/visualizer
&lt;/code&gt;&lt;/pre&gt;

&lt;p align=&#34;justify&#34;&gt;
  دقت کنید که به جای &lt;code&gt;YOURHOST&lt;/code&gt; باید &lt;code&gt;IP&lt;/code&gt; و یا یک &lt;code&gt;DNS A Record&lt;/code&gt; وارد کنید که &lt;code&gt;IP&lt;/code&gt; نود ۱ را &lt;code&gt;resolve&lt;/code&gt; کند، واسه این کار به راحتی می‌توانید در فایل &lt;code&gt;etc/hosts/&lt;/code&gt; یک &lt;code&gt;hostname&lt;/code&gt; ای برای نود ۱ در نظر بگیرید.
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  نکته‌ی مهمی که باید توجه کنید این هست که ایمیج برنامه‌ای که می‌خواهید روی کلاستر &lt;code&gt;scale&lt;/code&gt; شود، باید در تمامی نودها وجود داشته باشد، پس باید با &lt;code&gt;scp&lt;/code&gt; ایمیج برنامه را به نودها انتقال دهید، البته می‌توانید به راحتی &lt;a href=&#34;http://atahani.com/docker-private-registry&#34;&gt;یک داکر رجیستری خصوصی&lt;/a&gt; راه‌اندازی کرده و ایمیج برنامه را به آن &lt;code&gt;PUSH&lt;/code&gt; کنید و هنگام اجرای دستور &lt;code&gt;docker service create&lt;/code&gt; با سوییچ &lt;code&gt;with-registry-auth&lt;/code&gt; اطلاعات کاربری رجیستری را پاس بدهید، که در این حالت تمامی نودهای کلاستر ایمیج مربوطه را از آن رجیستری می‌گیرند.
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  حال برای اجرای یک سرویس جدید روی کلاستر، دستور زیر را روی نود اصلی &lt;code&gt;swarm manager&lt;/code&gt; اجرا می‌کنیم:
&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;docker service create -p 80:80 --name our_app golang-hello-world:1.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p align=&#34;justify&#34;&gt;
  برای اطلاع از سرویس‌های در حال اجرا روی کلاستر 👇
&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;docker service ls
&lt;/code&gt;&lt;/pre&gt;

&lt;p align=&#34;justify&#34;&gt;
  برای &lt;code&gt;scale&lt;/code&gt; سرویس در کلاستر از دستور &lt;code&gt;docker service scale our_app=6&lt;/code&gt; استفاده می‌کنیم.
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  &lt;p&gt;همچنین شما می‌توانید با دستور &lt;code&gt;docker service update&lt;/code&gt; تغییراتی در کانتینرهای در حال اجرا بدهید، در مثال زیر تمامی کانتیرها به صورت ۲ به ۲ با فاصله زمانی ۱۰ ثانیه ایمیج جدید دریافت می‌کنند.( در حقیقت اول &lt;code&gt;stop &amp;amp; remove&lt;/code&gt; می‌شوند و بعد با ایمیج جدید &lt;code&gt;start&lt;/code&gt; می‌شوند)&lt;/p&gt;

&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;docker service update --image golang-hello-world:1.1 --update-parallelism 2 --update-delay 10s our_app
&lt;/code&gt;&lt;/pre&gt;

&lt;p align=&#34;justify&#34;&gt;
  ✋ 👈 در همایش هم گفتم به عنوان تست با &lt;code&gt;swarm&lt;/code&gt; کار کرده‌ام، پس تجربه‌های لازم در محیط &lt;code&gt;production&lt;/code&gt; رو ندارم. فعالین این حوزه آینده خوبی برای &lt;code&gt;swarm&lt;/code&gt; تصور می‌کنند که در یک سال آینده بتواند همانند &lt;a href=&#34;Kubernetes.io&#34;&gt;Kubernetes&lt;/a&gt;  حرفی برای گفتن داشته باشد.
&lt;/p&gt;


&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  
&lt;/p&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>دوره آموزشی Continuous Integration</title>
      <link>http://atahani.com/ci</link>
      <pubDate>Sat, 30 Jul 2016 00:45:16 +0430</pubDate>
      
      <guid>http://atahani.com/ci</guid>
      <description>&lt;p align=&#34;justify&#34;&gt;
  &lt;p&gt;&lt;strong&gt;به روز رسانی&lt;/strong&gt; 👈 ویدیوها در در وب سایت فرانش منتشر شده است، می‌توانید به رایگان از &lt;a href=&#34;https://faranesh.com/programming/15206-continuous-integration&#34;&gt;این دوره&lt;/a&gt; بهره ببرید 😉&lt;p align=&#34;justify&#34;&gt;
  &lt;p align=&#34;justify&#34;&gt;
  پنجشنبه‌ی گذشته &lt;a href=&#34;https://evand.ir/events/ioccc8&#34;&gt;هشتمین گردهمایی جامعه آزاد رایانش ابری اصفهان&lt;/a&gt; برگزار شد، قرار بود در سومین جلسه‌ی کارگاه داکر از Continuous Integration بگم، بعد از سمینار آقای &lt;a href=&#34;https://twitter.com/hypermit&#34;&gt;مجید سلامت&lt;/a&gt;، رفتم واسه وصل کردن مک‌بوک به پروژکتور که متاسفانه وصل نمی‌شد، بعد از ۱۵ دقیقه تلاش با کلی ری‌استارت و اعمال مختلف بالاخره تصویر اومد. 😅 (آخر هم نفهمیدم چرا این جوری شده بود، آخه یک ساعت قبل تست کرده بودیم و تصویر روی همان پروژکتور داشتیم 😯)
&lt;/p&gt;&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  برای بحث‌ای مثل &lt;a href=&#34;https://en.wikipedia.org/wiki/Continuous_integration&#34;&gt;CI&lt;/a&gt; و اجرای چنین دمویی ۴۵ دقیقه واقعا کم بود، در حین اجرا هم یک بار داکر هنگ کرد 😩 کلاً کارگاه با مشکلات زیاد به همراه استرس شروع شد و آن کیفیت مطلوب جلسه‌های قبلی رو نداشت، خلاصه اینکه بدجوری زمان کم آوردم و نتوانستم به صورت کامل دموی CI رو اجرا کنم 😔
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  قبل از کارگاه تصمیم داشتم مراحل این دمو را به صورت کامل در قالب یک پست منتشر کنم، با اتفاقاتی که افتاد تصمیم بر آن شد که یک دوره مختصر و مفید ویدیویی تهیه کنم چرا که مواد لازم ( اسلاید، نمونه کد برای دمو و غیره) را داشتم فقط تهیه فیلم بود، آن هم جمعه انجام شد، امیدوارم دوستان از این دوره استفاده کنند 😊
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  اسلاید این دوره نیز در &lt;a href=&#34;https://docs.google.com/presentation/d/1MNH15XJtLEc8m4nVWrxu0Bxzr8PQh_ghutC0jKnu0rQ/edit#slide=id.p&#34;&gt;گوگل اسلاید&lt;/a&gt; قرار گرفته، فعلاً فقط در &lt;a href=&#34;https://www.youtube.com/playlist?list=PL-0EQDLPE23NUJoA-cLWfTHgnfCI6BdQF&#34;&gt;یوتیوب&lt;/a&gt; منتشر شده است، برای وب سایت خوب &lt;a href=&#34;https://faranesh.com/tutors/atahani&#34;&gt;فرانش&lt;/a&gt; نیز آپلود کرده‌ام، امیدوارم به زودی منتشر شود.
&lt;/p&gt;

&lt;iframe width=&#34;640&#34; height=&#34;360&#34; src=&#34;https://www.youtube.com/embed/videoseries?list=PL-0EQDLPE23NUJoA-cLWfTHgnfCI6BdQF&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;iframe src=&#34;https://docs.google.com/presentation/d/1MNH15XJtLEc8m4nVWrxu0Bxzr8PQh_ghutC0jKnu0rQ/embed?start=false&amp;loop=true&amp;delayms=3000&#34; frameborder=&#34;0&#34; width=&#34;480&#34; height=&#34;299&#34; allowfullscreen=&#34;true&#34; mozallowfullscreen=&#34;true&#34; webkitallowfullscreen=&#34;true&#34;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;/p&gt;&lt;/p&gt;

&lt;/p&gt;

</description>
    </item>
    
    <item>
      <title>راه‌حلی برای مشکلات npm</title>
      <link>http://atahani.com/npm_private_server</link>
      <pubDate>Wed, 29 Jun 2016 20:09:42 +0430</pubDate>
      
      <guid>http://atahani.com/npm_private_server</guid>
      <description>&lt;p align=&#34;justify&#34;&gt;
  هفته پیش برای جلسه دوم کارگاه داکر (همایش آزاد رایانش ابری) یک نمونه پروژه باحال درست کردم، سمت کاربر با &lt;code&gt;Reacjs&lt;/code&gt; نوشته شده بود، بعد موقعی که می‌خواستم ایمیج داکر ازش بسازم، یه عالمه پکیج &lt;code&gt;npm&lt;/code&gt; در آن استفاده شده بود که باید دوباره دانلود می‌کرد، برای دور زدن این مشکل ( با &lt;a href=&#34;https://github.com/jteeuwen/go-bindata&#34;&gt;go-bind-data&lt;/a&gt; ) از فایل باینری پروژه یک داکر ایمیج ساختم، خوب این راه‌حل خوبی به نظر می‌رسد چرا چون حجم ایمیج خیلی کم شد (چیزی حدود ۱۱ مگ) ! ولی مشکلی که هست در بحث &lt;a href=&#34;https://en.wikipedia.org/wiki/Continuous_integration&#34;&gt;Continuous integration&lt;/a&gt; باید کل پروژه به صورت اتوماتیک ساخته شده، تست و اجرا شود و در صورت اوکی بودن، باینری آن تولید و بعد ایمیج آن ساخته و به رجیستری منتقل و اجرا شود.
&lt;/p&gt;


&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  از این بحث‌ها که بگذریم، مشکل گرفتن ماژول‌های &lt;code&gt;npm&lt;/code&gt; چه در &lt;code&gt;CI&lt;/code&gt; و چه به صورت &lt;code&gt;local&lt;/code&gt; در ایران عزیزمون به خاطر بحث فیلتر‌نت همیشگی بوده، بهترین راه‌حل موجود این است که شما یک &lt;code&gt;NPM cach server&lt;/code&gt; ایجاد کنید، خوشبختانه راه اندازی چنین سرویسی برای خودتان خیلی ساده‌ست، مخصوصاً‌ با داکر 👊
&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  اول باید تصمیم بگیرید می‌خواهید این کش سرور کجا باشد، هر جایی که باشد مزایای خودش رو دارد، مثلاً برای شرکت‌هایی که چندین توسعه‌دهنده دارند بهترین راه این است که یک کش سرور روی سرور داخلی شرکت بیارند بالا، و بعد روی یکی از سرورهای خارج ایران هم یک کش سرور دیگه‌ای بیاورند بالا تا کش سرور داخلی به آن وصل بشود، این جوری دیگه به کل مشکل دریافت ماژول‌های &lt;code&gt;npm&lt;/code&gt; در شرکت حل خواهد شد، برای مصارف شخصی نیز اگه یه سرور شخصی دارید سه سوت با داکر کش سرور رو بیارید بالا و ازش استفاده کنید 😎
&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  آقای &lt;a href=&#34;http://keyvanfatehi.com/&#34;&gt;کیوان فاتحی&lt;/a&gt; داکر ایمیج &lt;a href=&#34;https://www.npmjs.com/package/sinopia&#34;&gt;sinopia&lt;/a&gt; رو آماده کرده‌اند، پس در سه سوت می‌شه با داکر روی سرور آورد بالا 😊
&lt;/p&gt;
&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker run --name sinopia -d -p 4873:4873 keyvanfatehi/sinopia:latest
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  بعد در ترمینال کلاینت برای ست کردن رجیستری
&lt;/p&gt;
&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;npm set registry http://SERVER_IP_ADDRESS:4873
&lt;/code&gt;&lt;/pre&gt;

&lt;p align=&#34;justify&#34;&gt;
  &lt;p&gt;حالا هنگام دریافت ماژول‌های &lt;code&gt;npm&lt;/code&gt; اگر قبلاً ماژول مورد نظر داخل سرور بود، از آنجا دریافت می‌کنید اگه هم نبود اول خودش سریع می‌گیره و بعد به سیستم شما انتقال می‌دهد ! چی از این راحت‌تر و بهتر 😬&lt;/p&gt;

&lt;/p&gt;


&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  راستی با استفاده از این روش می‌توانید ماژول‌های خصوصی &lt;code&gt;npm&lt;/code&gt; نیز داشته باشید، برای اطلاعات بیشتر می‌توانید به &lt;a href=&#34;https://github.com/kfatehi/docker-sinopia&#34;&gt;مخزن&lt;/a&gt; آن مراجعه کنید.
&lt;/p&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>خداحافظ SQLite ، سلام بر Realm</title>
      <link>http://atahani.com/realm-android</link>
      <pubDate>Fri, 03 Jun 2016 16:36:02 +0430</pubDate>
      
      <guid>http://atahani.com/realm-android</guid>
      <description>&lt;p align=&#34;justify&#34;&gt;
  اول یه چیزی رو صادقانه بگم اونم اینکه اصلاً تاکنون از &lt;code&gt;SQLite&lt;/code&gt; برای ذخیره‌سازی اطلاعات در اندروید استفاده نکردم (پس لازم نیست باهاش خدافظی کنم  😬) دلیل آن هم این بود که از اول دنبال یه روشی مثل &lt;code&gt;Linq To SQL&lt;/code&gt; در دات‌نت بودم، که درگیر دستورات &lt;code&gt;SQL&lt;/code&gt; نشوم، به صورت اتفاقی با &lt;a href=&#34;https://realm.io/docs/java/latest/&#34;&gt;Realm&lt;/a&gt; آشنا شدم، در یک کلام می‌شه گفت فوق‌العادست! ایده‌اش این است که شما درگیر دستورات &lt;code&gt;SQL&lt;/code&gt; نشوید و مثل &lt;code&gt;ORM&lt;/code&gt; ها به ازای هر جدول یک کلاس در نظر بگیرید، در این حالت اگر بخواهید رکوردی داخل آن جدول وارد کنید باید یک شئ از آن کلاس ایجاد کرده و بعد بهش بگویید که این شئ را داخل دیتابیس ذخیره کن، به همین سادگی ! در ادامه یک سری نکات راجع به استفاده از &lt;code&gt;Realm&lt;/code&gt; در اندروید آورده شده است:
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  &lt;h3 id=&#34;پیش-نیاز-استفاده-از-realm&#34;&gt;پیش‌نیاز استفاده از Realm&lt;/h3&gt;

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  &lt;h5 id=&#34;قدم-اول-اضافه-کردن-پلاگین-gradle-در-فایل-پروژه&#34;&gt;قدم اول: اضافه کردن پلاگین &lt;code&gt;Gradle&lt;/code&gt; در فایل پروژه&lt;/h5&gt;

&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath &amp;quot;io.realm:realm-gradle-plugin:{% render_version %}&amp;quot;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p align=&#34;justify&#34;&gt;
  به جای &lt;code&gt;render_version&lt;/code&gt; همان وروژن &lt;code&gt;1.0&lt;/code&gt; می‌شود که به تازگی منتشر شده است، استفاده از &lt;code&gt;Realm&lt;/code&gt; باعث می‌شود برنامه‌ی اندروید شما حدود &lt;code&gt;800KB&lt;/code&gt; چاق‌تر بشود، که خیلی نگران‌ کننده نیست  😙
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  &lt;h5 id=&#34;قدم-دوم-در-فایل-build-gradle-داخل-دایرکتوری-اپلیکیشن-پلاگین-realm-رو-اضافه-می-کنیم&#34;&gt;قدم دوم: در فایل &lt;code&gt;build.gradle&lt;/code&gt; داخل دایرکتوری اپلیکیشن پلاگین &lt;code&gt;Realm&lt;/code&gt; رو اضافه می‌کنیم&lt;/h5&gt;

&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;apply plugin: &#39;realm-android&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p align=&#34;justify&#34;&gt;
  &lt;h4 id=&#34;اضافه-کردن-یک-رکورد-در-دیتابیس&#34;&gt;اضافه کردن یک رکورد در دیتابیس&lt;/h4&gt;

&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;public class Person extends RealmObject {
    @PrimaryKey
    private long id;
    private String name;

    public Person(long id, String name) {
        this.id = id;
        this.name = name;
    }

    // ... Generated getters and setters ...
}

// Create a RealmConfiguration that saves the Realm file in the app&#39;s &amp;quot;files&amp;quot; directory.
RealmConfiguration realmConfig = new RealmConfiguration.Builder(context).build();
Realm.setDefaultConfiguration(realmConfig);

// Get a Realm instance for this thread
Realm realm = Realm.getDefaultInstance();

// Persist your data in a transaction
realm.beginTransaction();
Person person = realm.createObject(Person.class);
person.setName(&amp;quot;ahmad&amp;quot;);
realm.commitTransaction();
&lt;/code&gt;&lt;/pre&gt;

&lt;p align=&#34;justify&#34;&gt;
  &lt;h3 id=&#34;کوئری-گرفتن&#34;&gt;کوئری گرفتن&lt;/h3&gt;

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  می‌توانید همه جور کوئری روی اطلاعات داشته باشید، از اعمال ساده مثل &lt;code&gt;AND&lt;/code&gt; یا &lt;code&gt;SORT&lt;/code&gt; بگیر تا &lt;code&gt;Aggregation&lt;/code&gt; مثل &lt;code&gt;average&lt;/code&gt;
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  به عنوان مثال دستور زیر تمامی اشخاصی که بین ۱۳ تا ۲۰ سال سن دارند را از دیتابیس در قالب یک لیست می‌گیرد.
&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;RealmResults&amp;lt;User&amp;gt; teenagers = realm.where(User.class).between(&amp;quot;age&amp;quot;, 13, 20).findAll();
&lt;/code&gt;&lt;/pre&gt;

&lt;p align=&#34;justify&#34;&gt;
  برای اطلاعات بیشتر حتماً &lt;a href=&#34;https://realm.io/docs/java/latest/#queries&#34;&gt;داکیونت آن&lt;/a&gt; را به دقت مطالعه فرمایید!
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  &lt;h3 id=&#34;گوش-به-زنگ-باشیم-که-چه-زمانی-اطلاعات-در-دیتابیس-تغییر-می-کند&#34;&gt;گوش به زنگ باشیم که چه زمانی اطلاعات در دیتابیس تغییر می‌کند!&lt;/h3&gt;

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  شاید بتوان گفت بهترین قابلیت &lt;code&gt;Realm&lt;/code&gt; این است که شما می‌توانید تغییرات اطلاعات را رصد کنید، فوق‌العادست، به عنوان مثال می‌توان برنامه را اینگونه پیاده سازی کرد که هنگام دریافت اطلاعات جدید از سوی سرور آن‌ها را داخل دیتابیس ذخیره شود و بعد چون تغییرات را دائماً در دیتابیس رصد می‌شود به صورت لحظه‌ای تغییرات مورد نظر در UI پدیدار می‌شود، در این شرایط در هنگام دریافت &lt;code&gt;Notification&lt;/code&gt;  دیگر لازم نیست اطلاعات آن را با تکنیک &lt;code&gt;Broadcast Intent&lt;/code&gt; به تمامی activity‌ها ارسال کرد &amp;hellip;! در کل نحوه‌ی &lt;code&gt;Sync&lt;/code&gt; اطلاعات در اپلیکیشن خیلی ساده‌تر خواهد شد.
&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;public class MyActivity extends Activity {
    private Realm realm;
    private RealmChangeListener realmListener;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
      super.onCreate(savedInstanceState);
      realm = Realm.getDefaultInstance();
      realmListener = new RealmChangeListener() {
        @Override
        public void onChange(Realm realm) {
            // ... do something with the updates (UI, etc.) ...
        }};
      realm.addChangeListener(realmListener);
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        // Remove the listener.
        realm.removeChangeListener(realmListener);
        // Close the Realm instance.
        realm.close();
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p align=&#34;justify&#34;&gt;
  &lt;h3 id=&#34;انواع-transaction-ها&#34;&gt;انواع Transaction ها&lt;/h3&gt;

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  اکثر توسعه‌دهندگان از جمله خود من درست &lt;a href=&#34;https://realm.io/docs/java/latest/#writes&#34;&gt;داکیومنت مربوطه‌&lt;/a&gt; را نمی‌خوانند و از &lt;code&gt;Transaction&lt;/code&gt; مناسب استفاده نمی‌کنند، به عنوان مثال تصور کنید می‌خواهید اطلاعاتی که به صورت &lt;code&gt;Async&lt;/code&gt; از سرور دریافت می‌کنید را ذخیره کنید، برای این کار حتماً باید از این &lt;code&gt;Asynchronous Transactions&lt;/code&gt; استفاده کنید، اگر از این روش استفاده نکنید،‌ اپلیکیشن شما بعضی مواقع با خطا روبه‌رو خواهد شد.
&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;realm.executeTransactionAsync(new Realm.Transaction() {
            @Override
            public void execute(Realm bgRealm) {
                User user = bgRealm.createObject(User.class);
                user.setName(&amp;quot;John&amp;quot;);
                user.setEmail(&amp;quot;john@corporation.com&amp;quot;);
            }
        }, new Realm.Transaction.OnSuccess() {
            @Override
            public void onSuccess() {
                // Transaction was a success.
            }
        }, new Realm.Transaction.OnError() {
            @Override
            public void onError(Throwable error) {
                // Transaction failed and was automatically canceled.
            }
        });
&lt;/code&gt;&lt;/pre&gt;

&lt;p align=&#34;justify&#34;&gt;
  &lt;h3 id=&#34;سخن-آخر&#34;&gt;سخن آخر&lt;/h3&gt;

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  استفاده از &lt;code&gt;Realm&lt;/code&gt; خیلی هیجان انگیزه، ولی باید به این نکته توجه داشته باشید که به صورت صحیح از آن استفاده کنید و حتماً تمامی &lt;a href=&#34;https://realm.io/docs/java/latest&#34;&gt;داکیومنت&lt;/a&gt; آن را به دقت بخوانید (خیلی زیاد نیست، حدود یک ساعت وقت می‌گیرد)، از سال ۲۰۱۲ تاکنون افراد خیلی زیادی روی این &lt;a href=&#34;https://github.com/realm&#34;&gt;پروژه‌ی متن‌باز&lt;/a&gt; فعالیت داشته‌اند، هم اکنون این پروژه برای پلتفرم‌های مختلف مثل ios و یا xamarin نیز توسعه یافته است، و جالب اینکه فایل دیتابیس تولید شده در تمامی پلتفرم‌ها یکسان می‌باشد! شرکت‌های بزرگی مثل توییتر از &lt;code&gt;Realm&lt;/code&gt; استفاده می‌کنند، پس جای نگرانی نیست و می‌تواند تمامی نیازهای شما را برطرف نماید.
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  پ‌ن: تمامی نمونه کدها از داکیومنت اصلی آورده شده است.😗
&lt;/p&gt;

</description>
    </item>
    
    <item>
      <title>docker private registry در سه سوت</title>
      <link>http://atahani.com/docker-private-registry</link>
      <pubDate>Fri, 20 May 2016 23:24:06 +0430</pubDate>
      
      <guid>http://atahani.com/docker-private-registry</guid>
      <description>&lt;p align=&#34;justify&#34;&gt;
  پارسال با ابزار Docker آشنا شدم و برای اینکه مفاهیم از کلم نپره یه دوره‌ آموزشی با عنوان &lt;a href=&#34;https://faranesh.com/programming/14863-docker-in-action&#34;&gt;آشنایی و استفاده از داکر&lt;/a&gt; تهیه کردم، استقبال خوبی هم ازش شد 😊 همان طور که می‌دانید شرکت داکر سرویس داکر هاب را برای ایران مسدود کرده و عملاً با IP ایران نمی‌توانیم ایمیجی دریافت کنیم  😐 دوستان زیادی از جمله &lt;a href=&#34;https://twitter.com/miladkdz&#34;&gt;میلاد&lt;/a&gt; خیلی پگیر این موضوع هستند، با تمام این تلاش‌ها چون قوانین تحریماتی آمریکا هنوز پا برجاست، شرکت داکر همانند سایرین نمی‌تواند مغایر قانون رفتار کند!
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  نحوه‌ی درآمد شرکت داکر به گونه‌ای است که تمام هسته‌ی نرم‌افزاری خودش را به صورت متن‌باز در &lt;a href=&#34;https://github.com/docker&#34;&gt;گیت‌هاب&lt;/a&gt; قرار می‌دهد، یکی از این مخزن‌ها &lt;a href=&#34;https://github.com/docker/distribution&#34;&gt;distribution&lt;/a&gt; است، که خیلی به کار ما می‌آید چرا که هم از طرف داکر تحریم هستیم و هم اینکه برایمان سخت است که برای private image ها بخواهیم پول دلاری پرداخت کنیم.
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  کانفیگ و پیاده سازی Private Registry در ورژن ۲ آن خیلی راحت شده، البته اگر &lt;a href=&#34;https://github.com/docker/distribution/blob/master/docs/deploying.md&#34;&gt;داکیومنت&lt;/a&gt; آن را بخوانید نحوه‌ی کانفیگ آن یکم بد توضیح داده شده، در ادامه خیلی ساده مراحل کار توضیح داده می‌شود.
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  &lt;h3 id=&#34;یک-گواهی-tls-می-خواهیم&#34;&gt;یک گواهی TLS می‌خواهیم&lt;/h3&gt;

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  قبل از هر چیز به یک گواهی TLS احتیاج داریم، فرقی نمی‌کنه گواهی معتبر باشد یا نه ؟ در نحوه‌ی کارکرد آن تائثیری ندارد، ولی بهتر است شما از یک گواهی معتبر استفاده کنید، خوشبختانه به‌ راحتی می‌توانید از طریق &lt;a href=&#34;https://letsencrypt.org/&#34;&gt;letsencrypt&lt;/a&gt; گواهی معتبر رایگان دریافت کرد، برای اطلاعات بیشتر در مورد نحوه‌ی ایجاد کردن گواهی معتبر به &lt;a href=&#34;https://letsencrypt.org/getting-started/&#34;&gt;این آدرس&lt;/a&gt; بروید، خیلی سخت نیست!
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  &lt;h3 id=&#34;ساختن-دایرکتوری-های-مورد-نیاز&#34;&gt;ساختن دایرکتوری‌های مورد نیاز&lt;/h3&gt;

&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;$ tree /registry/
/registry/
├── auth
│   └── htpasswd
├── certs
│   ├── server.crt
│   └── server.key
├── data
└── docker-compose.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;p align=&#34;justify&#34;&gt;
  &lt;h3 id=&#34;در-نظر-گرفتن-یک-نام-کاربری-و-رمز-عبور-برای-کاربری-که-می-خواهد-به-این-registry-وصل-بشود&#34;&gt;در نظر گرفتن یک نام‌کاربری و رمز عبور برای کاربری که می‌خواهد به این registry وصل بشود&lt;/h3&gt;

&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;$ docker run --entrypoint htpasswd registry:2 -Bbn testuser testpassword &amp;gt; /registry/auth/htpasswd
&lt;/code&gt;&lt;/pre&gt;

&lt;p align=&#34;justify&#34;&gt;
  &lt;h3 id=&#34;اجرای-private-registry-به-وسیله-ی-docker-compose&#34;&gt;اجرای private registry به وسیله‌ی docker-compose&lt;/h3&gt;

&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;$ vim /registry/docker-compose.yml

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;registry:
  restart: always
  image: registry:2
  ports:
    - 443:443
  environment:
    REGISTRY_HTTP_TLS_CERTIFICATE: /certs/server.crt
    REGISTRY_HTTP_TLS_KEY: /certs/server.key
    REGISTRY_AUTH: htpasswd
    REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
    REGISTRY_AUTH_HTPASSWD_REALM: basic-realm
    REGISTRY_HTTP_ADDR: :443
    REGISTRY_HTTP_SECRET: topsecretphase
  volumes:
    - /registry/data:/var/lib/registry
    - /registry/certs:/certs
    - /registry/auth:/auth
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;$ docker-compose up -d
&lt;/code&gt;&lt;/pre&gt;

&lt;p align=&#34;justify&#34;&gt;
  &lt;h3 id=&#34;نحوه-ی-لاگین-کردن-به-private-registry&#34;&gt;نحوه‌ی لاگین کردن به private registry&lt;/h3&gt;

&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;$ docker login https://docker.example.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p align=&#34;justify&#34;&gt;
  &lt;h3 id=&#34;نحوه-ی-tag-کردن-یک-ایمیج-و-ارسال-آن-به-registry&#34;&gt;نحوه‌ی Tag کردن یک ایمیج و ارسال آن به registry&lt;/h3&gt;

&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;$ docker pull golang:1.6 &amp;amp;&amp;amp; docker.example.com/testuser/golang
$ docker push docker.example.com/testuser/golang
&lt;/code&gt;&lt;/pre&gt;

&lt;p align=&#34;justify&#34;&gt;
  خوب پس کار زیاد سختی هم نبود، تازه شما می‌توانید کار جالب‌تری هم انجام بدهید، private registry یک قابلیتی دارد به عنوان &lt;a href=&#34;https://github.com/docker/distribution/blob/master/docs/mirror.md&#34;&gt;mirror&lt;/a&gt; که برای کش کردن ایمیج‌ها در سرور داخلی یک شرکت در نظر گرفته شده است تا base image هایی که کارمندان یک شرکت استفاده می‌کند در آن registry کش بشود، خوب وقتی شما چنین قابلیتی را می‌بینید صددرصد با خود می‌گویید چه خوب !! می‌شود از این خصوصیت برای دوز زدن تحریم استفاده کرد، یه سرور خارجی داشته باشیم همه‌ی base image ها داخل آن کش بشود و بعد از اینجا بهش متصل بشویم، درسته این ایده تقریباً عملی هست، ولی مشکلی که وجود دارد این است که داکر برای جستجو داخل image ها و به طور کلی index کردن آن به دامین index.docker.com متصل می‌شود، پس باز تحریم این جا جلوی شما را می‌گیرد، ولی خوب همین که بتوانید از طریق آن base image ها با حجم بالا را بدون proxy دریافت کنید، بد نیست، پس اگه فقط index.docker.com را بزارید پشت proxy دیگه کل مشکل تحریم بر طرف خواهد شد.(امیدوارم به زودی زود تحریم‌های فناوری برداشته بشود!)
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  &lt;h2 id=&#34;اجرای-private-registry-در-حالت-mirror&#34;&gt;اجرای private registry در حالت mirror&lt;/h2&gt;

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  برای اجرای private registry در حالت mirror کافیه این فایل را ایجاد کرده و بعد با docker-compose اجرا کنید
&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;$ vim /registry/docker-compose.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;registry:
  restart: always
  image: registry:2
  ports:
    - 443:443
  environment:
    REGISTRY_HTTP_TLS_CERTIFICATE: /certs/server.crt
    REGISTRY_HTTP_TLS_KEY: /certs/server.key
    REGISTRY_HTTP_ADDR: :443
    REGISTRY_HTTP_SECRET: topsecretphase
    REGISTRY_PROXY_REMOTEURL: https://registry-1.docker.io
  volumes:
    - /registry/data:/var/lib/registry
    - /registry/certs:/certs
    - /registry/auth:/auth
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;$ docker-compose up -d
&lt;/code&gt;&lt;/pre&gt;

&lt;p align=&#34;justify&#34;&gt;
  در سمت کلاینت باید docker deamon با این آپشن‌ها اجرا بشود، برای اطلاعات بیشتر به &lt;a href=&#34;https://docs.docker.com/engine/admin/configuring/&#34;&gt;این آدرس&lt;/a&gt; بروید.
&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;$ vim /etc/default/docker
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;DOCKER_OPTS=&amp;quot;--registry-mirror=https://docker. example.com&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;$ service docker restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p align=&#34;justify&#34;&gt;
  &lt;p&gt;نکته: برای این که ببینید در هنگام گرفتن یک base image چه اتفاقی می‌افتد باید docker daemon را در &lt;a href=&#34;https://docs.docker.com/engine/admin/configuring/#daemon-debugging&#34;&gt;حالت دیباگ&lt;/a&gt; اجرا کنید، اگه دقت کنید هنگام جستوجو، داکر به index.docker.com رجوع می‌کند که تحریم است، ولی به هنگام گرفتن یک base image اولویت با registery ای است که شما تنظیم کرده‌اید پس اگر آن base image در رجیستری شما نبود اول از docker hub گرفته می‌شود و بعد به کلاینت منتقل می‌شود!&lt;/p&gt;

&lt;/p&gt;


&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  
&lt;/p&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>منابع یادگیری زبان Go</title>
      <link>http://atahani.com/golang-resource</link>
      <pubDate>Mon, 09 May 2016 21:14:13 +0430</pubDate>
      
      <guid>http://atahani.com/golang-resource</guid>
      <description>&lt;p align=&#34;justify&#34;&gt;
  در &lt;a href=&#34;http://atahani.com/golang-intro&#34;&gt;پست قبلی&lt;/a&gt; نوشتم چرا زبان Go، زبان خوبی محسوب می‌شود، در این مطلب سعی کردم لیستی از منابع آموزشی که واسه یادگیری زبان Go خوبه را به اشتراک بگذارم.
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  &lt;h2 id=&#34;ویدیو-کتاب-داکیومنت&#34;&gt;ویدیو، کتاب، داکیومنت ؟&lt;/h2&gt;

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  شیوه یادگیری هر کسی متفاوت است، خیلی‌ها مثل من در درجه‌ی اول ویدیو را ترجیح می‌دهند چرا که در کوتاه‌ترین زمان ممکن ایده و سرنخ‌های خوبی به شما می‌دهند و همچنین آتش یادگیری و استفاده از آن زبان و یا تکنیک را در شما زنده می‌کند 🔥 البته باید ویدیو آموزشی از منبع مناسبی باشد، پس بهتر است همیشه کانال افراد کار درست را در یوتیوب &lt;code&gt;subscribe&lt;/code&gt; کنید ( مثلاً یکیش کانال &lt;a href=&#34;http://youtube.com/user/AhmadTahani&#34;&gt;من&lt;/a&gt; ، تعریف الکی از خودم  😂 )، کسانی که با کتاب کنار میان فوق‌العاده با صبر و حوصله هستند، البته پاداش این صبر رو هم می‌برند و مطالب را عمیقاً درک می‌کنند ( البته اگه درست مطالعه کنند ! ) در انتها شما نمی‌توانید تمامی تکنیک‌ها و اصول و قواعد را از طریق کتاب و یا ویدیو آموزشی یاد بگیرید، پس همیشه باید در داکیومنت آن زبان و یا تکنولوژی زندگی کنید!
&lt;/p&gt;


&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  در ادامه منابع آموزشی برای زبان Go که می‌شناسم را به تفکیک لیست کردم، اگر منبع خوبی جا افتاده حتماً در قسمت نظرات درج کنید که بقیه هم استفاده کنند!
&lt;/p&gt;
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  👈 من منبعی به فارسی درباره زبان Go ندیده‌ام، اگر سراغ دارید حتماً به اشتراک بگذارید!
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  &lt;h2 id=&#34;داکیومنت&#34;&gt;داکیومنت&lt;/h2&gt;

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  &lt;a href=&#34;https://golang.org/doc/&#34;&gt;داکیومنت رسمی زبان Go&lt;/a&gt; خیلی خوب و جامع نوشته شده، البته درک آن برای کسانی جالب و راحت است که با دنیای برنامه‌نویسی آشنا باشند، پس اگر قبلاً با زبانی آشنا هستید حتماً مستقیم سراغ داکیومنت بروید چون بسیار خوب، کامل و عالی تنظیم شده، برای اولین قدم سراغ &lt;a href=&#34;https://tour.golang.org/&#34;&gt;Tour of Go&lt;/a&gt; بروید، قدم به قدم در قالب مثال‌هایی با این زبان آشنا می‌شوید، در قدم بعدی هم &lt;a href=&#34;https://golang.org/doc/effective_go.html&#34;&gt;Effective Go&lt;/a&gt; و &lt;a href=&#34;https://golang.org/ref/spec&#34;&gt;Language Specification&lt;/a&gt; خیلی می‌توانه مفید باشه.
&lt;/p&gt;


&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;داکیومنت مربوطه به تمامی Package ها داخلی Go را می‌توانید در &lt;a href=&#34;https://golang.org/pkg/&#34;&gt;اینجا&lt;/a&gt; داشته باشید.&lt;/li&gt;
&lt;li&gt;همچنین داکیومنت‌های مربوط به تمامی Package مثل &lt;a href=&#34;https://github.com/labstack/echo&#34;&gt;Echo&lt;/a&gt; را می‌توانید در &lt;a href=&#34;https://godoc.org/&#34;&gt;godoc.org&lt;/a&gt; داشته باشید، اصولاً تمامی package های خوب و استاندارد در اینجا داکیومنت خودشان را قرار می‌دهند.&lt;/li&gt;
&lt;/ul&gt;

&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  👈متاسفانه به دلیل تحریم فناوری گوگل بر ایران تمامی لینک‌های ارائه شده با IP ایران مسدود می‌باشد 😶
&lt;/p&gt;
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  &lt;h2 id=&#34;ویدیو&#34;&gt;ویدیو&lt;/h2&gt;

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  یوتیوب به عنوان یک دانشگاه‌ خوب همیشه پر از ویدیو‌های خوب و با تکنیک هست که شما می‌توانید به صورت رایگان ازش استفاده کنید، البته وب‌ سایت‌هایی مثل &lt;a href=&#34;https://www.pluralsight.com&#34;&gt;Pluralsight&lt;/a&gt; و یا &lt;a href=&#34;https://www.udemy.com&#34;&gt;Udemy&lt;/a&gt; هم هستند که ویدیو‌های پولی خوبی دارند 😅 ، مواردی که اینجا لیست می‌شود همگی از Youtube هست که می‌توانید به رایگان از آنها استفاده کنید.
&lt;/p&gt;


&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;یه Meet Up یک و نیم ساعته برای آشنایی با گو - &lt;a href=&#34;https://www.youtube.com/watch?v=Vlie-srOU8c&#34;&gt;Build Web App with golang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;دوره آموزشی Golang توسط &lt;a href=&#34;https://www.youtube.com/user/toddmcleod&#34;&gt;Todd McLeod&lt;/a&gt; که در سیلیکون‌ولی آموزش داده است - ۱۴۲ ویدیو &lt;a href=&#34;https://www.youtube.com/playlist?list=PLSak_q1UXfPrI6D67NF8ajfeJ6f7MH83S&#34;&gt;Learn To Code - Golang Training&lt;/a&gt; دقیقاً انگار کلاس رفتین با این تفاوت که نمی‌توانید در همان لحظه سوال کنید.&lt;/li&gt;
&lt;li&gt;کانال اختصاصی &lt;a href=&#34;https://www.youtube.com/user/gocoding&#34;&gt;The Go Programming Language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;نکات خیلی کلیدی و خوب در ویدیوهای ۵ دقیقه‌ای - &lt;a href=&#34;https://www.youtube.com/playlist?list=PLFP7SbLMoK_Zl3EIgDbDBJkgyAjKivGR1&#34;&gt;Go In 5 Minutes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;یه ویدیوی خوب درباره &lt;a href=&#34;http://m.youtube.com/watch?v=Iebb5dXaScE&#34;&gt;مهاجرت از Node.js به Go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;اگه خیلی علاقه‌مند شدید ویدیوهای کنفرانس‌های Go خیلی می‌توانه مفید باشه &lt;a href=&#34;https://www.youtube.com/results?q=gophercon&#34;&gt;gophercon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  &lt;h2 id=&#34;کتاب&#34;&gt;کتاب&lt;/h2&gt;

&lt;/p&gt;
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  راستش به شخصه تنبلم و حوصله کتاب خواندن را ندارم، در حوزه زبان Go فقط یه کتاب خواندم، خیلی خوب و ساده نوشته شده که به صورت رایگان در &lt;a href=&#34;https://www.golang-book.com/books/intro&#34;&gt;اینجا&lt;/a&gt; ارائه شده است.
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  &lt;h2 id=&#34;وب-سایت-مخزن-های-متن-باز-بلاگ-ها&#34;&gt;وب سایت - مخزن‌های متن باز - بلاگ‌ها&lt;/h2&gt;

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;وب سایت &lt;a href=&#34;https://gobyexample.com/&#34;&gt;Go by Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;مخزن نمونه‌کد برای دوره آموزشی وب سایت &lt;a href=&#34;https://www.ardanlabs.com/&#34;&gt;Ardanlabs&lt;/a&gt; در &lt;a href=&#34;https://github.com/ardanlabs/gotraining&#34;&gt;گیت‌هاب&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;معرفی پکیج‌های خوب زبان Go در &lt;a href=&#34;http://awesome-go.com/&#34;&gt;Awesome Go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;وبلاگ &lt;a href=&#34;http://nathanleclaire.com/&#34;&gt;Nathan LeClaire&lt;/a&gt; کارمند داکر&lt;/li&gt;
&lt;li&gt;وبلاگ &lt;a href=&#34;http://spf13.com&#34;&gt;Steve Francia&lt;/a&gt; توسعه‌دهنده &lt;a href=&#34;http://gohugo.io&#34;&gt;HUGO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://twitter.com/shijucv&#34;&gt;Shiju Varghese&lt;/a&gt; هم به صورت روزانه در &lt;a href=&#34;http://paper.li/shijucv/1408868319&#34;&gt;paper.li&lt;/a&gt; مطالب جالب درباره golang را به اشتراک می‌گذارد.&lt;/li&gt;
&lt;/ul&gt;

&lt;/p&gt;

</description>
    </item>
    
    <item>
      <title>شروع دوستی با زبان Go</title>
      <link>http://atahani.com/golang-intro</link>
      <pubDate>Thu, 28 Apr 2016 23:56:38 +0430</pubDate>
      
      <guid>http://atahani.com/golang-intro</guid>
      <description>&lt;p align=&#34;justify&#34;&gt;
  حدود ۶ ماه پیش از طریق دوستان توییتری با زبان Go آشنا شدم و بعد از آن در اولین فرصت روی یادگیری این زبان عالی و خوش‌دست وقت گذاشتم، الان بعد از دو ماه آشنایی توانستم یه &lt;a href=&#34;https://github.com/atahani/golang-rest-api-sample&#34;&gt;REST API به صورت نمونه (همراه با تکنیک‌های OAuth)&lt;/a&gt; به وسیله‌ی این زبان پیاده سازی کنم، از انتخابی که کردم فوق‌العاده خوشحالم 😉
&lt;/p&gt;


&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  حالا تصمیم گرفتم مطلبی در مورد زبان Go بنویسم، سعی می‌کنم با دانش و اطلاعاتی که در این چند ماه بدست آوردم بگم چرا زبان Go انتخاب خوبی به حساب می‌آید و در صورت قانع شدن چه طوری می‌توانیم با این زبان دوست بشویم!
&lt;/p&gt;
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  &lt;h2 id=&#34;چرا-زبان-go&#34;&gt;چرا زبان Go ؟&lt;/h2&gt;

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  &lt;h4 id=&#34;اول-بگیم-چه-کسانی-زبان-go-را-بوجود-آورده-اند&#34;&gt;اول بگیم چه کسانی زبان Go را بوجود آورده اند !&lt;/h4&gt;

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  تعدادی آدم خیلی خفن و باهوش از جمله &lt;a href=&#34;https://en.wikipedia.org/wiki/Ken_Thompson&#34;&gt;Ken Thompson&lt;/a&gt; و یا &lt;a href=&#34;https://en.wikipedia.org/wiki/Rob_Pike&#34;&gt;Rob Pike&lt;/a&gt; برای رفع نیازهای خودشان این زبان را بوجود آوردند، در کل چنین هدف‌هایی را دنبال می‌کردند:
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;سریع کامپایل شود !&lt;/li&gt;
&lt;li&gt;کارایی بالایی داشته باشید.&lt;/li&gt;
&lt;li&gt;بتوان از توان پردازشی سیستم‌های فعلی ( چند هسته‌ای ) بهره‌ی لازم را برد.&lt;/li&gt;
&lt;li&gt;مدیریت روندهای همزمان concurrency راحت‌تر شود.&lt;/li&gt;
&lt;li&gt;با شبکه بیگانه نباشد، بتوان به راحتی از آن برای وب استفاده کرد.&lt;/li&gt;
&lt;li&gt;سینتکس تمیز و راحتی داشته باشد.&lt;/li&gt;
&lt;li&gt;به راحتی بتوان فایل کامپایل شده‌اش را روی سیستم‌عامل‌های مختلف اجرا کرد.&lt;/li&gt;
&lt;/ul&gt;

&lt;/p&gt;


&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  خوب تقریباً خصوصیات زبان Go گفته شد 😂 ولی در کل این اهداف اصلی بوجود آمدن این زبان بود، شاید هم چند مورد از قلم افتاده باشه، به هر حال آدم‌های کار درستی مثل &lt;a href=&#34;https://en.wikipedia.org/wiki/Robert_Griesemer&#34;&gt;Robert Griesemer&lt;/a&gt; بیکار نبودند که چنین زبانی را به وجود بیاورند!
&lt;/p&gt;
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  &lt;h4 id=&#34;کی-پشت-این-زبان-هست-متن-بازه&#34;&gt;کی پشت این زبان هست ؟! متن بازه ؟&lt;/h4&gt;

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  چون بیشتر بوجود آورندگان این زبان در شرکت گوگل کار می‌کردند، گوگل پشت این زبان هست و به صورت کاملاً متن باز در دسترس همه قرار داده، پس نباید نگران پشتیبانی و یا مرگ این زبان باشیم!
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  &lt;h4 id=&#34;آیا-زبان-go-شی-گراست&#34;&gt;آیا زبان Go شی‌گراست ؟&lt;/h4&gt;

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  این سوال خیلی از کسانی هست که می‌خواهند با این زبان دوست بشوند، در جواب می‌توان گفت هم آره و هم نه، آری از این نظر که شما می‌توانید با استفاده از مفاهیم Types و Method هایی که برای آن در نظر می‌گیرید به گونه‌ای مثل شی‌گرایی عمل کنید، ولی در عمل که وارد این زبان می‌شوید می‌بینید که این زبان شما را محدود به مفاهیم شی‌گرایی مثل کلاس و یا وراثت نکرده است، به عنوان مثال Custom Type ها و مبحث Interface به شما کمک می‌کند به راحتی از لایبری‌های built in خود زبان Go استفاده‌های جالبی داشته باشید، در کل تا ازش استفاده نکنید نمی‌توانید بفهمید که چه قدر می‌توان در عین سادگی flexible عمل کرد!
&lt;/p&gt;


&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  &lt;h4 id=&#34;نحوه-ی-انتشار-و-به-روز-رسانی-زبان&#34;&gt;نحوه‌ی انتشار و به روز رسانی زبان&lt;/h4&gt;

&lt;/p&gt;
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  این زبان در نوامر سال ۲۰۰۹ به صورت عمومی منتشر شده و تا سال ۲۰۱۲ بر روی بهبود و طراحی آن کار شده، بعد از انتشار ورژن ۱ آن دیگه استیبل شده و تغییراتی روی لایبری‌های اصلی آن انجام نگرفته، تقریباً هر شش ماه ورژن جدیدی از آن منتشر می‌شود، پس مثل Node.js این جوری نیست که هفته‌ای یه ورژن منتشر کنه!
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  &lt;h4 id=&#34;زبان-کامپیایلی&#34;&gt;زبان کامپیایلی&lt;/h4&gt;

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  زبان‌هایی مثل پایتون و یا جاوااسکریپت اصطلاحاً weak typed هستند، چون در هنگام اجرا تفسیر شده و به کد ماشین تبدیل می‌شوند به گونه‌ای هستند که نوع مقادیر می‌تواند به صورت پویا باشد، این موضوع شاید خوب به نظر بیاید ولی بیشتر مواقع دردسر ساز است، در مقابل این نوع شیوه زبان‌هایی مثل ++C و یا جاوا strong typed بوده و یا اصطلاحاً می‌گویند کامپایلی هستند، مشکلات زبان‌های تفسیری را نداشته ولی در عوض زمان کامپایل آنها در پروژه‌های بزرگ به صروت چشم گیری محسوس است، زبان Go در عین static typed بودن، آمده از تکنیک‌هایی استفاده کرده تا این زمان کامپایل حتی در پروژه‌های خیلی بزرگ به چند ثانیه برسد ! و جالب‌تر اینکه وقتی کامپایل شد شما می‌توانید روی سیستم عامل‌های مختلف بدون داشتن نرم‌افزار خاصی اجرایش کنید.
&lt;/p&gt;


&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  &lt;h4 id=&#34;حالا-که-می-گی-اینقدر-خوبه-کی-ازش-استفاده-می-کنه&#34;&gt;حالا که می‌گی اینقدر خوبه کی ازش استفاده می‌کنه؟&lt;/h4&gt;

&lt;/p&gt;
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  قسمت هیجان انگیز ماجرا این هست که خیلی از شرکت‌های بزرگ دنیا با استفاده از زبان Go سرویس‌ها فوق‌العاده با کیفیت و با کارایی بالا نظیر داکر، یوتیوب، دراپ‌باکس، MongoD‌B توسعه داده‌اند، پس مطمئن باشید از همه لحاظ این زبان امتحان خودش را در Scale های بالا پس داده است، برای مشکلاتش راه‌حل‌های منطقی و خوبی ارائه شده، کامیونیتی فوق‌العاده فعالی داره، و مطمئن باشید در همین ایران هم آینده درخشانی خواهد داشت، کما اینکه همین الان شرکت‌هایی هستند که از این زبان برای توسعه سرویس‌های خودشان استفاده می‌کنند!
&lt;/p&gt;


&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  برای اطلاعات بیشتر راجع به این زبان می‌توانید &lt;a href=&#34;https://golang.org/doc/faq&#34;&gt;سوالات متداول در وب‌سایت خود زبان Go&lt;/a&gt; را بخوانید، یکم تخصصی گفته ولی کامل و جامع راجع به زوایای مختلف این زبان نوشته!
&lt;/p&gt;
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  👈 در حد سواد و اطلاعاتی که داشتم در مورد این زبان نوشتم، قول می‌دهم به زودی در ادامه‌ی این پست راجع به منابع آموزشی این زبان مطلبی بنویسم 😊!
&lt;/p&gt;

</description>
    </item>
    
    <item>
      <title>راه میان‌بری احمقانه به نام Xamarin</title>
      <link>http://atahani.com/xamarin</link>
      <pubDate>Thu, 21 Apr 2016 15:26:47 +0430</pubDate>
      
      <guid>http://atahani.com/xamarin</guid>
      <description>&lt;p align=&#34;justify&#34;&gt;
  تازه واردان در دنیای برنامه‌نویسی همیشه به دنبال راه میان‌بر هستند، این که با یک زبان شما بتوانید برای پلتفرم‌های گوناگون اپلیکیشن بنویسید رویایی و شیرین به نظر می‌رسد، بله درست شنیدید شعار &lt;a href=&#34;http://xamarin.com/&#34;&gt;پروژه‌ی Xamarin&lt;/a&gt; دقیقاً همین هست، به اصطلاح با یک Code Base به زبان سی‌شارپ می‌توانید برای پلتفرم‌های اندروید، iOS و ویندوز موبایل اپلیکیشن بنویسید.
&lt;/p&gt;


&lt;p&gt;&lt;strong&gt;اول بگم نظر من در مورد این پروژه به عنوان توسعه‌دهنده اندروید خواهد بود !&lt;/strong&gt;&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  راستش همیشه عاشق یادگیری تکنولوژی‌های مختلف بودم، قبل تر هم نام این پروژه را شنیده بودم ولی چون به تازگی تیم توسعه‌دهنده Xamarin به مایکروسافت پیوسته است و در سطح‌های پایین می‌توان به رایگان از آن بهره برد، خیلی واسم جالب بود که تستی بزنم !
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  الان که مایکروسافت صاحب این پروژه شده، دات نت کار محترم می‌تواند به راحتی Extension مربوطه را داخل ویژوال استودیو انتخاب کرده و Xamarin را اضافه کند، نکته اینکه شما اگر ویندوزی هستید فقط می‌توانید روی پلتفرم اندروید و ویندوز فون کار کنید و برای کامپایل و اجرای برنامه‌ روی iOS باید حتماً از سیستم‌عامل مکینتاش و XCode استفاده کنید، البته مایکروسافت این کار رو راحت کرده و می‌توانید به صورت Remote Login روی مک کار کنید، برای کسانی مثل من که سیستم‌عامل اصلیشون مکینتاش هست هم فقط می‌توانند برای اندروید و iOS اپلیکیشن توسعه بدهند ! بیشتر SDK های اندرویدی و XCode را از قبل داشتم، برای همین حدود ۲ گیگ فایل احتیاج داشت تا بتواند Xamarin Studio را نصب کند، ( جالب هست که بدانید برای دات‌نت از &lt;a href=&#34;http://www.mono-project.com/&#34;&gt;Mono Framework&lt;/a&gt; استفاده می‌کند.) بعد از نصب یکی از اپلیکیشن‌های نمونه که خود برنامه معرفی کرده بود را دانلود کردم و یه اجرا روی اندروید و iOS گرفتم )
&lt;/p&gt;


&lt;p&gt;&lt;figure class=&#34;coolfig&#34;
        style=&#34;width:750px&#34;
        &gt;
    
        &lt;img src=&#34;http://atahani.com/images/xamarin/download-it.png&#34;  /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h5 class=&#34;coolimage_header&#34;&gt;دانلود اجزای مختلف برنامه&lt;/h5&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  به طور کلی قصد دارم از زوایای مختلف انتخاب Xamarin به عنوان توسعه اپلیکیشن را به جالش بکشم 😎
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  &lt;h3 id=&#34;زبان-یکسان-سی-شارپ&#34;&gt;زبان یکسان سی‌شارپ&lt;/h3&gt;

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  یکی از اشتباهات بد تازه‌ واردان این است که با خود می‌گویند
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  &lt;blockquote&gt;
&lt;p&gt;ااا ایول چه خوب میشه با همان سی‌شارپ‌ای که در دانشگاه یادگرفتیم و چند تا پروژه همین جوری که باهاش درست کردیم، اپلیکیشن واسه هر دو پلتفرم بنویسیم  👊 !!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  در صورتی که زبان فقط الفبای توسعه یک اپلیکیشن هست، دانستن یک زبان برنامه‌نویسی فقط این امکان را به شما می‌دهند که به بی‌شعوری همچون کامپیوتر بگویید به چه روشی برنامه‌ی دلخواه من را اجرا کن ! پس این که صرفاً شما دات‌نت کار کرده‌اید نباید انتظار داشته باشید که مثل آب خوردن می‌توانید اپلیکیشن توسعه بدهید !، پس در کل به نظر من اینکه با دات‌نت آشنایی دارید مزیتی محسوب نمی‌شود چرا که به کل شما باید لایبری‌های مربوط به Xamarin را زیرو و رو کنید تا بتوانید بهفمید چگونه‌ میتوان به وسیله‌ی آن برنامه ای توسعه بدهید، در واقع Xamarin آمده برای تمامی لایبری‌های مورد استفاده در اندروید و یا iOS لایبری جداگانه تعریف کرده تا شما به وسیله‌ی آن بتوانید با زبان سی‌شارپ از آن استفاده کنید، در آخر موقع ساخت پروژه تمامی کدهای سی‌شارپ به کد جاوا تبدیل می‌شود. به نظر من واقعاً اشتباه محض هست که شما بیایید فقط برای این که با زبان دات‌نت کار کرده‌اید، به جای خواندن &lt;a href=&#34;http://developer.android.com/index.html&#34;&gt;داکیومنت پیشنهادی گوگل&lt;/a&gt; داکیونت‌های مربوط به &lt;a href=&#34;https://developer.xamarin.com/guides/#android&#34;&gt;Xamarin برای اندروید&lt;/a&gt; را بخوانید فقط به دلیل اینکه با سی‌شارپ آشنا هستید!
&lt;/p&gt;


&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  از طرفی به عنوان توسعه‌دهنده‌ی اندروید خیلی مواقع لازم میشه شما به سورس لایبری مراجعه کنید تا ببینید که چه طوری میشه از آن استفاده کنید و یا حتی خودتان سورس را تغییر داده و از آن به عنوان لایبری جدید استفاده کنید، اصلاً لذت استفاده از اپن سورس به همین موضوع هست، حالا در این شرایط شما اگر بخواهید از سورس لایبری استفاده کنید باید اول به لایبری Xamarin که به صورت سی‌شارپ ای هست مراجعه کنید بعد ببینید که چه طوری لینک شده به لایبری جاوا بعد تشخص بدهید که چگونه از آن استفاده کنید، مطمئن باشید که هیچی ازش سر در نمی‌آورید😱
&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;figure class=&#34;coolfig&#34;
        style=&#34;width:750px&#34;
        &gt;
    
        &lt;img src=&#34;http://atahani.com/images/xamarin/source-code.png&#34;  /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h5 class=&#34;coolimage_header&#34;&gt;سورس لایبری که شما شاید به آن احتیاج داشته باشید!&lt;/h5&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  &lt;h3 id=&#34;توسعه-برای-پلتفرم-های-مختلف&#34;&gt;توسعه برای پلتفرم‌های مختلف&lt;/h3&gt;

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  این که شما یک Code Base بنویسید برای پلتفرم‌های مختلف خیلی جذاب به نظر می‌رسد، ولی در عمل اینگونه نیست، هنگامی که شما می‌خواهید پروژه‌ی جدیدی ایجاد کنید از شما می‌پرسد که آیا می‌خواهید برای پلتفرم‌های مختلف اپلیکیشن توسعه بدهید یا فقط اندروید و یا فقط iOS  !! خوب دقیقاً از همین جا می‌فهمید که کار انگاری مشکل داره ! چرا که با عقل هم جور در نمی‌آید که شما یک کد بیس و یک طراحی UI داشته باشید و در خروجی چندین اپلیکیشن در پلفرم‌های گوناگون ! در عمل توسعه دهندگان این پروژه آمده‌اند &lt;a href=&#34;https://developer.xamarin.com/api/root/Xamarin.Forms&#34;&gt;یک سری لایبری به عنوان Cross Platform&lt;/a&gt; توسعه داده‌اند که با استفاده از آن بتواند کدی که شما براساس آن نوشته‌اید را به کدهای قابل فهم برای پلتفرم‌های مختلف تبدیل کند، پس اگر بخواهید به صورتی کد بنویسید که روی تمامی پلتفرم‌های کار کند باید تمامی داکیونت این لایبری را مطالعه فرمایید در آخر هم می‌فهمید که آنقدر باز و قابل انعطاف نبود تا نیازهای شما را برطرف نماید، اگر سری به داکیونت‌های آن بزنید دقیقاً متوجه خواهید شد، به عنوان مثال راه‌حل هایی معرفی کرده که شما &lt;a href=&#34;https://developer.xamarin.com/guides/android/advanced_topics/binding-a-java-library/&#34;&gt;بتوانید کدهای Java ای خودتان را به پروژه&lt;/a&gt; اضافه کنید ! پس دقیقاً‌ معلوم خواهد شد که لایبری‌های مربوطه تمامی نیازهای شما را برآورده نخواهد کرد ! پس عملاً این که شما با یک Code Base بتوانید در دو پلتفرم به صورت Native اپلیکیشن داشته باشید خیالی باطل بوده، و در توسعه اپلیکیشن‌های ساده نیز بسیار سخت می‌توان این رویا را به حقیقت رساند!
&lt;/p&gt;


&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  &lt;h3 id=&#34;از-لحاظ-ide&#34;&gt;از لحاظ IDE&lt;/h3&gt;

&lt;/p&gt;
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  شرکت گوگل و اپل سال‌ها بر روی Android Studio و XCode کار کرده‌اند و محیط خوبی را برای توسعه‌دهنده‌گان فرآهم کرده‌اند، مثلاً در ورژن جدید اندروید استودیو شما در چند ثانیه می‌توانید کدهای خود را تغییر داده و دوباره اجرا بگیرید ! ، خوب در این IDE خبری از این خصوصیات نیست ! و طبیعی هم هست چرا که کدهای شما باید اول از زبان سی‌شارپ به جاوا تبدیل شود و این خود زمان بر خواهد بود، در کل خصوصیات دیگر که یک توسعه‌دهنده هر روز از آن استفاده می‌کند را این IDE نداشته ! مثلاً مدیریت ریسورس‌ها، Gradle و غیره ، حالا جالبه که بدانید موقع کد نوشتن یک قسمتی به عنوان Toolbox آورده که دستوراتی مثل for را لیست کرده که با کلیک بر روی آن Template آن در کد درج شود😶
&lt;/p&gt;


&lt;p&gt;&lt;figure class=&#34;coolfig&#34;
        style=&#34;width:750px&#34;
        &gt;
    
        &lt;img src=&#34;http://atahani.com/images/xamarin/toolbox.png&#34;  /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h5 class=&#34;coolimage_header&#34;&gt;Toolbox مذکور&lt;/h5&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  &lt;h3 id=&#34;از-لحاظ-کامیونیتی&#34;&gt;از لحاظ کامیونیتی&lt;/h3&gt;

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  خوب این که دیگه خیلی مشخص هست، بیشتر برنامه‌نویسان از جمله خود من 😉 وقتی به یک خطای بدجنس بر می‌خورم دقیقاً پیغام خطای دریافتی را گوگل می‌کنم که گوگل عزیز هم پست‌های استک‌اورفلو را پیشنهاد می‌دهد و در نهایت در عرض چند دقیقه راه حل مشکل پیدا خواهد شد، حال تصور کنید شما در توسعه اپلیکیشن با Xamarin به خطایی برخورد می‌کنید چون تعداد کمی برای توسعه اپلیکیشن از این روش استفاده می‌کنند و اغلب آنها مثل شما تنبل هستند‌ ( چون که همگی مثل شما می‌خواستند راه میان‌بر را انتخاب کنند ) احتمال پیدا کردن راه‌حل خیلی کم است ! همچنین خیلی مواقع شما از سورس کدهای پروژه‌های متن باز استفاده می‌کنید، جستوجویی در گیت‌هاب انجام می‌دهید و تعدادی مخزن Clone می‌کنید و با چرخ زدن داخل کدها هم چیز یاد می‌گیرد و هم می‌فهمید خودتان خیلی خفن نیستید :)) در کل شما به غیر از اپلیکیشن‌های نمونه که خود گروه Xamarin توسعه داده است، نمونه کدی در اینترنت نخواهید یافت ! اصلاً کسانی که در حوزه برنامه‌نویسی اپلیکیشن حرفی برای گفتن دارند مطمئناً راه میان‌بر را انتخاب نکرده و به صورت کاملاً Native پروژه می‌نویسند !
&lt;/p&gt;


&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  &lt;h3 id=&#34;از-لحاظ-نگهداری-کدها&#34;&gt;از لحاظ نگهداری کدها&lt;/h3&gt;

&lt;/p&gt;
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  مطمئناً تعداد توسعه دهندگان Xamarin در ایران به مراتب از Native کارها کمتر بوده، خیلی سخت می‌توانید توسعه‌دهنده‌ای را راضی کنید که روی اپلیکیشن توسعه داده شده توسط شخص دیگری کار کند ! چرا که اغلب خیلی بد داکیومنت کرده‌اند و یا از استایل خاصی در کدها پیروی نکرده و در کل در پیشتر مواقع توسعه‌دهنده جدید به جای اینکه روزها وقت صرف این بکند که کدهای قدیمی را کدگشایی کند، خودش از اول شروع به نوشتن می‌کند، البته می‌توان از بروز چنین مشکلاتی به قدری جلوگیری کرد، حالا شما تصور کنید کارمندی داشته اید که با سی‌شارپ اپلیکیشن توسعه داده، بعد از ترک شرکت دیگر عملاً کدهای توسعه‌داده شده بلا استفاده خواهد بود چون هم نیروی کار مرتبط خیلی سخت‌تر پیدا خواهد شد و هم اینکه خود گروه Xamarin هم در نمونه اپلیکیشن‌ها به استایل و سیاست خاصی در توسعه پروژه‌ها نرسیده‌اند !
&lt;/p&gt;


&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  &lt;h3 id=&#34;سخن-آخر&#34;&gt;سخن آخر&lt;/h3&gt;

&lt;/p&gt;
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  در دنیای کنونی شرکت‌های زیادی راه حل‌هایی برای توسعه اپلیکشن داده‌اند مثل وب اپلیکیشن‌ها و یا همین Xamarin، ولی هیچ کدام از نظر کارایی و کیفیت و یا روند توسعه نتوانستند با اپلیکیشن‌های Native رقابت کنند، چند وقت پیش سالار کابلی &lt;a href=&#34;https://sallar.me/app-journey/&#34;&gt;مقایسه ای در روند توسعه اپلیکیشن با جاوااسکریپت و Swfit انجام داده بود&lt;/a&gt; که خواندن آن خالی از لطف نیست، در کل به نظر من کسی که می‌خواهد به صورت تخصصی وارد دنیای توسعه اپلیکیشن شود باید به صورت Native آن هم با تکنولوژی و زبان پیشنهاد شده توسط شرکت اپل و یا گوگل پیروی کند، فکر نمی‌کنم یادگرفتن زبان جاوا و یا Swift آنقدر سخت باشد که شما بخواهید به خاطر آن به سمت Xamarin و یا وب اپلیکیشن بروید ! پس به هیچ عنوان وقت خودتان را صرف چنین تکنولوژی‌هایی نکنید، لازم نیست شما در توسعه نرم‌افزار آچار فرانسه باشید، هم توسعه‌دهنده وب باشید و هم اپلیکیشن ! اگر وقت و انرژی کافی دارید فقط چند ماه لازمه که با توسعه اپلیکیشن اندروید و یا iOS آشنا شوید که در این صورت به مراتب آینده شغلی بهتری در جامعه خواهید داشت.
&lt;/p&gt;


&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  تشکر که این مطلب نسبتاً طولانی را مطالعه کردید، اگر نظری داشتید حتماً این پایین در میان بگذارید👇
&lt;/p&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>تجربه‌ی توسعه اندروید در پروژه‌ی تلپاتی</title>
      <link>http://atahani.com/telepathy-android</link>
      <pubDate>Sat, 19 Mar 2016 23:41:52 +0330</pubDate>
      
      <guid>http://atahani.com/telepathy-android</guid>
      <description>

&lt;p align=&#34;justify&#34;&gt;
  قبلاً در مورد  &lt;a href=&#34;http://atahani.com/telepathy-project&#34;&gt;تجربیات عمومی به دست آمده در پروژه‌ی تلپاتی&lt;/a&gt; و همچنین در مورد  &lt;a href=&#34;http://atahani.com/telepathy-backend-with-nodejs&#34;&gt;بک‌اند این پروژه&lt;/a&gt; مطالبی نوشتم، حالا می‌خواهم در مورد برنامه‌ی اندروید نکاتی را با شما در میان بگذارم.
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  حدود یک سال هست که وارد دنیای توسعه اندروید شدم، هر توسعه‌دهنده‌ی اندرویدی این موضوع را می‌داند که توسعه یک برنامه ‌برای دستگاه‌های مختلف در این پلتفرم کار دشواری است چرا که تولید‌کنندگان گوشی‌های مختلف نظیر هوآوی و یا سامسونگ تغییرات زیادی در اندروید به وجود می‌آورند که در این حالت شما نمی‌توانید انتظار داشته باشید برنامه‌ی شما در تمامی این گوشی‌ها به درستی کار کند ! برای همین توسعه‌دهندگان اندروید به این مهم رسیده‌اند که &amp;ldquo;در توسعه اندروید هیچ چیز قطعی نیست !&amp;rdquo;
&lt;/p&gt;


&lt;h3 id=&#34;گزارش-خطا&#34;&gt;گزارش خطا&lt;/h3&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  متأسفانه در کافه‌بازار امکان گزارش خطا وجود ندارد و همین امر باعث می‌شود توسعه‌دهنده به درستی متوجه خطاهای رخ داده نشود، البته در گوگل پلی نیز که این امکان وجود دارد کاربران هنگام بسته شدن برنامه معمولاً گزینه‌ی گزارش خطا را انتخاب نمی‌کنند ! پس در این صورت شما به عنوان توسعه‌دهنده از خطاهای رخ داده اطلاع نخواهید داشت و در مقابل برای رفع آن مشکلات نمی‌توانید اقدام لازمه را انجام دهید، پس گزارش‌گیری از خطاها یک امر مهمی محسوب می‌شود، هنگام بروز خطا در بیشتر برنامه‌ها نظیر تلگرام، تمامی اطلاعات مربوط به خطا (full stack trace) درون فایلی ذخیره شده و در زمان مناسب به سرور منتقل خواهد شد، که خوب این کار درست و عقلانی به نظر می‌رسد، چرا که در صورت پیاده‌سازی درست می‌توان این فایل‌های متنی را به فرمت &lt;code&gt;csv&lt;/code&gt; درآورده و اطلاعات مورد نیاز را از آن استخراج نمود.
&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  من از روش ساده‌تری استفاده کردم، شما می‌توانید با ساختن یک &lt;a href=&#34;https://api.slack.com/bot-users&#34;&gt;Slack bot user&lt;/a&gt; به صورت اتوماتیک پیامی در &lt;code&gt;Channel&lt;/code&gt; دلخواه خود ارسال کنید، پس یک کانال برای گزارش خطا ایجاد کردم، و تنظیم کردم که هنگام بروز خطا با استفاده از یک ‍‍‍‍&lt;code&gt;HTTP&lt;/code&gt; متد کلیه اطلاعات خطا را در کانال مربوطه منتشر کند، این یک روش نسبتاً اصولی و ساده‌ای است که به راحتی می‌توانید به صورت لحظه‌ای از بروز خطاهای برنامه اطلاع داشته باشید.
&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  من از روش ساده‌تری استفاده کردم، شما می‌توانید با ساختن یک &lt;a href=&#34;https://api.slack.com/bot-users&#34;&gt;Slack bot user&lt;/a&gt; به صورت اتوماتیک پیامی در &lt;code&gt;Channel&lt;/code&gt; دلخواه خود ارسال کنید، پس یک کانال برای گزارش خطا ایجاد کردم، و تنظیم کردم که هنگام بروز خطا با استفاده از یک ‍‍‍‍&lt;code&gt;HTTP&lt;/code&gt; متد کلیه اطلاعات خطا را در کانال مربوطه منتشر کند، این یک روش نسبتاً اصولی و ساده‌ای است که به راحتی می‌توانید به صورت لحظه‌ای از بروز خطاهای برنامه اطلاع داشته باشید.
&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  چون برنامه را روی دستگاه‌های مختلف تست نکرده بودم، دائما از گوشی‌های عجیب و غریب بیشتر از برند (huawei, lenovo) خطا دریافت می‌کردم، ولی در عوض چون اطلاعات خوبی از خطاها داشتم توانستم طی دو نسخه تقریباً تمامی خطا را رفع کنم، پس حتماً برای قسمت‌هایی که احتمال خطا می‌دهید (try/catch) بنویسید و همچنین از (unhandled exception) ها نیز گزارش تهیه کنید، توجه داشته باشید به همراه توضیحات خطا، اطلاعات دستگاه (نام، نسخه‌ی اندروید،نسخه‌ی برنامه، &amp;hellip;) را نیز ارسال کنید تا بهترین درک را از خطای رخ داده داشته باشید !
&lt;/p&gt;
&lt;/p&gt;

&lt;h3 id=&#34;استفاده-از-realm&#34;&gt;استفاده از Realm&lt;/h3&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  استفاده از &lt;a href=&#34;https://realm.io/docs/java/latest/&#34;&gt;Realm&lt;/a&gt; به عنوان دیتابیس داخلی در مقابل ‍‍&lt;code&gt;sqlite&lt;/code&gt; خیلی لذت بخش خواهد بود چرا که به راحتی می‌توانید مثل یک &lt;a href=&#34;https://en.wikipedia.org/wiki/Object-relational_mapping&#34;&gt;ORM&lt;/a&gt; رکوردهای ذخیره شده ‍‍را در قالب ‍‍&lt;code&gt;Java Object&lt;/code&gt; داشته باشید و همچنین به راحتی اعمالی نظیر &lt;code&gt;sort&lt;/code&gt; ، ‍‍&lt;code&gt;search&lt;/code&gt; ، ‍‍&lt;code&gt;aggregation&lt;/code&gt; بر روی &lt;code&gt;Data&lt;/code&gt; مورد نظر خواهید داشت که این خیلی لذت بخش خواهد بود.
&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  پیشنهاد من این است که حتماً خیلی خوب داکیونت این لایبری را بخوانید، چون این لایبری هنوز به صورت کامل پایدار نشده و دائم در حال تغییر است.
&lt;/p&gt;
&lt;/p&gt;

&lt;h3 id=&#34;استفاده-از-retrofit&#34;&gt;استفاده از Retrofit&lt;/h3&gt;

&lt;p align=&#34;justify&#34;&gt;
  برای ارتباط با سرور&lt;code&gt;REST API&lt;/code&gt; از ورژن &lt;code&gt;1.9&lt;/code&gt; لایبری &lt;a href=&#34;square.github.io/retrofit/&#34;&gt;Retrofit&lt;/a&gt; استفاده شده، ورژن ۱ این لایبری مشکلاتی را به همراه داشت، به عنوان مثال خطاهای &lt;code&gt;HTTP&lt;/code&gt; و &lt;code&gt;request timeout&lt;/code&gt; درون یک &lt;code&gt;Callback&lt;/code&gt; بررسی می‌شود و همین امر باعث می‌شد تا در بعضی مواقع به اشتباه مشکلات شبکه‌ای را خطاهای &lt;code&gt;HTTP&lt;/code&gt; در نظر بگیرد ! ، در ورژن ۲ این لایبری تا حدود زیادی این مشکلات برطرف شده است.
&lt;/p&gt;


&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  برای اطلاعات بیشتر درباره‌ی لایبری &lt;code&gt;Retrofit&lt;/code&gt; می‌توانید،  &lt;a href=&#34;http://atahani.com/retrofit-tutorial&#34;&gt;دوره‌ای که به عنوان عیدی&lt;/a&gt; درست کرده‌ام را ببینید.
&lt;/p&gt;
&lt;/p&gt;

&lt;h3 id=&#34;زبان-جاوا-در-توسعه-ی-اندروید&#34;&gt;زبان جاوا در توسعه‌ی اندروید&lt;/h3&gt;

&lt;p align=&#34;justify&#34;&gt;
  قبلاً که عشق مایکروسافت بودم، با زبان شی‌گرا سی‌شارپ کار میکردم، زبان جاوا در مقایسه با سی‌شارپ به صورت بهتری اصول شی‌گرایی را پوشش می‌دهد، ولی در روند توسعه اندروید، جاوا دردسرهای خودش را خواهد داشت، به عنوان مثال اغلب با خطای &lt;code&gt;null exception&lt;/code&gt; روبه رو خواهید شد که برای جلوگیری از این مشکل باید دائم چک کنید که آیا کلاس مورد نظر &lt;code&gt;null&lt;/code&gt; است یا نه، و یا برای فیلتر کردن یک لیست از اشیا مجبور خواهیم بود از لایبری‌های دیگری استفاده کنیم، به تازگی زبان جدید  &lt;a href=&#34;https://kotlinlang.org/&#34;&gt;kotlin&lt;/a&gt; این مشکلات را بر طرف کرده و با نگرش جدیدی، روند توسعه‌ی اندروید و به کل برنامه‌های جاوایی را بهبود بخشیده، اگر توسعه‌دهنده اندروید هستید حتماً نگاهی به این زبان داشته باشید !
&lt;/p&gt;


&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  برنامه‌ی اندروید تلپاتی به صورت کامل در &lt;a href=&#34;https://github.com/atahani/telepathy-android&#34;&gt;این مخزن&lt;/a&gt; منتشر شده، می‌دانم که متن باز کردن چنین برنامه‌ای برای افراد سود چندانی نخواهد داشت چرا که برای این ایده‌ی خاص نوشته شده، ولی شما می‌توانید از تکنیک‌های مورد استفاده در این پروژه استفاده کنید مثل همین گزارش گیری خطاهای رخ داده و یا استفاده از &lt;code&gt;Realm&lt;/code&gt; برای ذخیره اطلاعات.
&lt;/p&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>عیدی ۹۵</title>
      <link>http://atahani.com/retrofit-tutorial</link>
      <pubDate>Tue, 15 Mar 2016 09:48:14 +0330</pubDate>
      
      <guid>http://atahani.com/retrofit-tutorial</guid>
      <description>&lt;p align=&#34;justify&#34;&gt;
  &lt;p&gt;&lt;strong&gt;به روز رسانی&lt;/strong&gt; 👈 ویدیوها در در وب سایت فرانش منتشر شده است، می‌توانید به رایگان از &lt;a href=&#34;https://faranesh.com/programming/14946-retrofit-in-android&#34;&gt;این دوره&lt;/a&gt; بهره ببرید 😉&lt;p align=&#34;justify&#34;&gt;
  &lt;p align=&#34;justify&#34;&gt;
  عیدی ۹۵ از این توییت شروع شد 😬
&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;fa&#34; dir=&#34;rtl&#34;&gt;پیشنهاد: به عنوان عیدی یه تکنیک ساده ولی جذاب و کاربردی در دنیای برنامه‌نویسی به صورت ویدیویی آموزش بدهیم و بعد در یوتیوب به اشتراک بگذاریم!&lt;/p&gt;&amp;mdash; Ahmad Tahani (@atahani) &lt;a href=&#34;https://twitter.com/atahani/status/707296099204210688&#34;&gt;March 8, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  خودم بین چند موضوع تردید داشتم تا بلاخره به پیشنهاد دوست توییتریم &lt;a href=&#34;https://twitter/alireza94&#34;&gt;علیرضا احمدی&lt;/a&gt; و همچنین با توجه به نبود دوره‌‌ی آموزشی مرتبط، موضوع &amp;ldquo;استفاده از Retrofit در اندروید&amp;rdquo; را انتخاب کردم، این موضوع به نحوی بود که باید حتماً سمت سرور را نیز پوشش می‌دادم، اول با خودم فکر کردم خوب میرم از یک پروژه Node.js ای مثل &lt;a href=&#34;http://jsonplaceholder.typicode.com/&#34;&gt;JSONPlaceholder&lt;/a&gt; استفاده می‌کنم، ولی بعد گفتم خیلی خوب میشود این دوره مفاهیم Authentication را نیز پوشش بدهد، برای همین به کلم زد و پروژه سمت سرور را نیز با Node.js بدون استفاده از دیتابیس درست کردم، حدوداً یک روزی وقت برد، کم کم پروژه‌ی این دوره واسه خودش یه پروژه کوچک جالب شد، به عنوان ایده سرویس توییتر را در نظر گرفتم، اسم برنامه را هم Fake Twitter گذاشتم، احتمالاً با خودتون می‌گوئید شاید بهتر بود یک توییتر کلاینت براساس API توییتر می‌نوشتم، ولی خوب چون می‌خواستم تیکنیک‌های authentication را به صورت کامل در یک سیستم ساده بیان کنم تصمیم گرفتم براساس یک نمونه API ساده بنویسم، در کل تجربه‌ی خیلی جالبی بود.
&lt;/p&gt;

&lt;iframe width=&#34;640&#34; height=&#34;360&#34; src=&#34;https://www.youtube.com/embed/videoseries?list=PL-0EQDLPE23N3WkenBrZzTLfnOIAIybKm&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;iframe src=&#34;https://docs.google.com/presentation/d/1IcHx4_BOo6LXi92zKSMWH_97ak7e_SSgnrgghu1Lnh4/embed?start=false&amp;loop=false&amp;delayms=3000&#34; frameborder=&#34;0&#34; width=&#34;480&#34; height=&#34;299&#34; allowfullscreen=&#34;true&#34; mozallowfullscreen=&#34;true&#34; webkitallowfullscreen=&#34;true&#34;&gt;&lt;/iframe&gt;

&lt;p align=&#34;justify&#34;&gt;
  اسلایدهای این دوره را می‌توانید در &lt;a href=&#34;https://goo.gl/lzwXys&#34;&gt;گوگل اسلاید&lt;/a&gt; ببینید، همچنین پروژه‌ی سمت سرور و پروژه‌ی اندروید در &lt;a href=&#34;https://github.com/atahani&#34;&gt;گیت‌هاب اینجانب&lt;/a&gt; منتشر شده است، ویدیوها را هم که فعلاً در &lt;a href=&#34;https://www.youtube.com/playlist?list=PL-0EQDLPE23N3WkenBrZzTLfnOIAIybKm&#34;&gt;یوتیوب&lt;/a&gt; منتشر شده، برای وب سایت خوب &lt;a href=&#34;https://faranesh.com&#34;&gt;فرانش&lt;/a&gt; نیز آپلود کرده‌ام امیدوارم تا قبل از عید این دوره را منتشر بکنند.
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  🙌 هنوز دیر نشده شما هم می‌توانید یه تکنیک ساده و کاربری را به صورت ویدیو آموزش داده و در یوتیوب و یا آپارت به اشتراک بگذارید، لازم نیست یه دوره کامل باشه، بعضی مواقع حتی یک ویدیوی ساده‌ی آموزشی می‌تواند شروع خوبی برای یادگیری یک تکنیک باشد !
&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;/p&gt;

&lt;/p&gt;

</description>
    </item>
    
    <item>
      <title>تجربه‌ی استفاده از Node.js در پروژه‌ی تلپاتی</title>
      <link>http://atahani.com/telepathy-backend-with-nodejs</link>
      <pubDate>Tue, 08 Mar 2016 14:56:10 +0330</pubDate>
      
      <guid>http://atahani.com/telepathy-backend-with-nodejs</guid>
      <description>&lt;p align=&#34;justify&#34;&gt;
  در &lt;a href=&#34;http://atahani.com/telepathy-project/&#34;&gt;مطلب قبل&lt;/a&gt; از تجربیات عمومی که در پروژه‌ی تلپاتی بدست آوردم گفتم، در این پست می‌خواهم در مورد تکنولوژی سمت سرور این پروژه، توضیحاتی را ارائه بدم، در این سال‌ها استفاده از تکنولوژی &lt;a href=&#34;https://nodejs.org&#34;&gt;Node.js&lt;/a&gt; ، نوشن جاوااسکریپت سمت سرور در فضای وب محبوب شده است، برای کسانی که تازه با Node.js آشنا شده‌اند این موضوع خیلی جذاب خواهد بود که می‌توانند با همان زبانی که در سمت کاربر از آن استفاده می‌کنند در سمت سرور نیز بک‌اند پروژه را پیاده سازی کنند، ولی خوب آدم‌هایی که در پروژه‌های واقعی از Node.js استفاده کردند به این مهم رسیده‌اند که درسته با همان زبان می‌توان سمت سرور کد زد، ولی در عمل تجربه‌ی استفاده از جاوااسکریپت در سمت سرور به گونه‌ای دیگر خواهد بود و استفاده‌ از Node.js در عین سادگی مشکلات زیادی خواهد داشت نظیر:
&lt;/p&gt;


&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  👈 زبان &lt;a href=&#34;https://en.wikipedia.org/wiki/JavaScript&#34;&gt;JS&lt;/a&gt; در مقابل زبان‌های کامپایلری، تفسیری بوده و در زمان اجرا به کد ماشین تبدیل شده و دستورات را اجرا می‌نماید، بسیاری از مشکلات به همین موضوع بر‌میگردد، مشکلاتی نظیر نوع متغییرها به صورت ایستا چک نمی‌شود و یا خطایابی به سختی صورت می‌گیرد.
&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  👈 در زبان JS مفهومی به عنوان Class و یا Interface وجود ندارد و همین باعث می‌شود کسانی که حتی چندین سال با Node.js کار کرده‌اند نتوانند ساختار درستی برای پیاده‌سازی سمت سرور داشته باشند، در کل JS نه شی‌گرا هست و نه یک زبان تابعی و این موضوع باعث می‌شود برنامه‌نویس بک‌اند همیشه برای انتخاب الگوی مناسب سردرگم باشد !
&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  👈به خاطر ماهیت async در Node.js بسیاری از مواقع برنامه‌نویس مجبور خواهد بود از Callback های تو‌درتو استفاده کند که این خود باعث می‌شود کدها خوانایی خوبی را نداشته و خطایابی را نیز مشکل‌تر خواهد کرد. ( &lt;a href=&#34;http://callbackhell.com&#34;&gt;اطلاعات بیشتر&lt;/a&gt; )
&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  👈 با کمی کار با &lt;a href=&#34;https://www.npmjs.com&#34;&gt;npm&lt;/a&gt; متوجه خواهید شد به دلایل فراوان نظیر شبکه، ماهیت تفسیری بودن JS، &amp;hellip; هنگام دریافت بسته‌های پیش‌نیاز پروژه در شرایط مختلف به مشکلات زیادی برخورد خواهید کرد، مخصوصاً هنگامی که می‌خواهید سیستم انتشار خودکار برای سرویسی مبتنی بر Node.js در نظر بگیرد، دائماً با چنین مشکلاتی برخورد خواهید کرد.
&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  👈 ماهیت Node.js به گونه‌ای است که فقط با یک ترد از سیستم عامل، روی یک پردازنده کار می‌کند و خوب این باعث می‌شود شما برای درخواست‌های بالا مجبور باشید چندین نسخه از برنامه را اجرا کرده و با استفاده از یک load balancer درخواست‌ها را بین این برنامه‌ها تقسیم کنید، که استفاده از این تکنیک مشکلاتی را به همراه خواهد داشت.
&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  استفاده از &lt;a href=&#34;https://nodejs.org/en/docs/es6/&#34;&gt;ES6&lt;/a&gt; در Node.js تعداد کمی از مشکلات ذکر شده را تا حدودی حل کرده است، ( البته باید بگم که تجربه‌ی استفاده از ES6 را تاکنون نداشته ام).
&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  حالا برگردیم سر پروژه تلپاتی، در پیاده سازی این پروژه به مفاهیم جدیدی برخورد کردم، مثل OAuth و یا Push Notification Service ، با توجه به این که تجربه‌ای در پیاده سازی REST API به صورت اصولی نداشتم‌، چندین هفته طول کشید تا به درستی مفاهیم Authentication در API را به درستی پیاده سازی کنم، در تلپاتی همانند سرویس‌هایی نظیر توییتر می‌توان چندین Client تعریف کرد و کاربر نیز می‌تواند به صورت هم زمان از چندین دستگاه به این سرویس دسترسی داشته باشد که در این صورت تمامی اطلاعات این دستگاه‌ها با یکریگر sync می‌شود، یکی دیگر از تکنیک‌های لازم برای پیاده سازی API خوب این است که شما به خوبی خطاهای احتمالی را تشخیص داده و برای آن &lt;a href=&#34;https://en.wikipedia.org/wiki/List_of_HTTP_status_codes&#34;&gt;HTTP status codes&lt;/a&gt; مناسب و همچنین کد‌ها و یا رشته‌های ثابت در نظر گرفته تا هنگام بروز خطا پاسخی مناسب به کاربر داده شود.
&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  این پروژه به صورت کامل در &lt;a href=&#34;https://github.com/atahani/telepathy-backend&#34;&gt;گیت‌هاب&lt;/a&gt; قرار داده شده، خودم می‌دانم که پروژه‌های متن باز این چنینی خیلی کمک به دوستان نخواهد کرد چرا که منطق این پروژه مختص به ایده‌ی تلپاتی بوده، و شاید حتی پیاده سازی و سبک کدهای نوشته شده با شما مطابقت نداشته باشد، ولی تکنیک‌هایی نظیر Authentication  که به صورت کامل و اصولی پیاده سازی شده است می‌تواند در قالب یک نمونه کد به شما کمک فراوانی کند !
&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  پ‌ن: می‌دانم به صورت اصولی باید برای پروژه تست نوشت، ولی خوب چون ساختار پروژه به صورت پیوسته در حال تغییر بود، یونیت تست برای API نیز دائماً باید تغییر می‌کرد، واسه همین تنبلی کرده و به کل یونیت تست برای پروژه ننوشتم 😬
&lt;/p&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>تجربه‌ای کارآمد از یک شکست</title>
      <link>http://atahani.com/telepathy-project</link>
      <pubDate>Wed, 02 Mar 2016 16:07:07 +0330</pubDate>
      
      <guid>http://atahani.com/telepathy-project</guid>
      <description>

&lt;p align=&#34;justify&#34;&gt;
  
اواخر مرداد ماه ۹۴ تصمیم گرفتم یک ایده کوچکی را پیاده سازی کنم، ایده‌ خیلی ساده به نظر می‌رسید، در اصل این ایده نه یک سرویس پیام‌رسان همانند تلگرام بود، نه یک شبکه به اشتراک‌گذاری، تنها کاری که این سرویس قرار بود انجام دهند این بود که فردی پیامی را برای دوست خود ارسال می‌کند و بعد از آن اگر آن شخص مورد نظر نیز در آن بازه‌ی زمانی مشخص شده پیامی را برایش ارسال نماید این پیام‌ها، به اصطلاح تلپاتی‌ها منطبق گشته و برای هر دو ارسال خواهد شد، در غیر این صورت پیام ارسال شده‌ی نفر اول بعد از اتمام زمان مشخص حذف می‌شود. به نحوی می‌توان گفت به وسیله‌ی آن می‌توان تلپاتی در علم روانشناسی را اثبات کرد، به گونه‌ای که هنگامی که شما به فکر کسی هستید برای او پیامی ارسال می‌کنید و بعد متوجه خواهید شد که آیا او نیز به فکر شما هست یا نه !

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  
پیاده سازی این پروژه به صورت کامل حدود ۵ ماه زمان برد، و در ۲۱ دی‌ماه اولین نسخه قابل ارائه در گوگل پلی استور و کافه‌بازار منتشر گردید و در تاریخ ۹ اسفند‌ ماه، اپلیکیشن از گوگل پلی استور و کافه بازار برداشته شد، در طول این مدت حدود ۷۰۰۰ کاربر در این سرویس ثبت‌نام کردند، ولی فعالیت خیلی کمی داشتند، به دلایل فراوان که در ادامه خواهم گفت تصمیم گرفتم پرونده‌ی کاری این سرویس را در همین امسال بسته و تمامی پروژه را به صورت متن باز منتشر کرده و دلایل شکست و تجربه‌های خود را به اشتراک بگذارم.

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  
در اینجا سعی کرده‌ام دلایل شکست و تجربه‌های عمومی بدست آورده در این پروژه را به تفکیک عنوان به صورت خلاصه توضیح بدهم.

&lt;/p&gt;


&lt;h2 id=&#34;ایده&#34;&gt;ایده&lt;/h2&gt;

&lt;p align=&#34;justify&#34;&gt;
  
راستش من در برخورد با خانم‌ها آدم خجالتی هستم، خیلی برای من جالب بود که ببینم آیا کسی که بهش علاقه دارم آن نیز به فکر من هست یا نه ( البته این موضوع بر میگرده به سالیان دور، در حال حاضرفقط یه نفر هست، آن هم همین iMac ای که صبح تا شب در کنارش زندگی می‌کنم 😆) ، در کل خیلی جالب بود که یک همچنین سیستمی وجود داشته باشد تا شخص بتواند احساسات و افکار خودش را منتشر کند به شرطی که آن شخص مقابل نیز به فکر او باشد. این ایده‌ی به نظر جالب را با خانواده و آشنایان نزدیک در میان گذاشتم، بازخورد خوبی گرفتم، گفتند می‌تواند جالب باشد، در آن زمان اصلاً به رفتار مردم در جامعه دقت نکردم. حال اینکه در این دوره، بیشتر مردم فقط وقتی از دوستانشان یاد می‌کنند که با آن‌ها کاری داشته باشند ! در کل این ایده فقط برای یه سری افراد خاص، در شرایطی خاص‌تر به کار می‌آمد.

&lt;/p&gt;


&lt;h2 id=&#34;کسب-و-کار&#34;&gt;کسب‌و‌کار&lt;/h2&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  
شاید خیلی خنده‌دار باشه که قبل از اجرا اصلاً جنبه کسب‌و‌کار این سرویس را در نظر نگرفتم، اول با خودم گفتم خوب ما فقط باید تعداد زیادی کاربر جذب کنیم، بعداً بحث کسب‌و‌کار مطرح خواهد شد، ولی نکته‌ای که خیلی جالبه اینکه، در دنیای اپلیکیشن‌های موبایل بحث اصلی بر سر فعالیت کاربران هست تا اینکه فقط صرفاً اپلیکیشن شما را نصب کنند و تمام ... یعنی ایده‌ی شما باید در رفع نیاز کاربر به گونه‌ای باشد که کاربر وقت زیادی را در اپلیکیشن شما سپری کند، مثل اپلیکیشن‌های پر کاربرد کنونی نظیر تلگرام، توییتر، فیسبوک،…

&lt;/p&gt;
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  
اشتباه اصلی من این بود که، اصلاً به خاص بودن این ایده توجه‌ نکرده بودم، چرا که حتی اگر کاربر از آن هم استفاده کند، برای شخصی یک تلپاتی ارسال می‌کند و حال اگر هم این تلپاتی‌ها منطبق شود، بعداً در حد چند ثانیه کاربر پیام طرف مقابل را دیده و تمام ! در کل سرویسی نیست که تعامل دائمی کاربر را داشته باشد، که بتوان از این تعامل پلن کسب‌وکاری را تعریف کرد.

&lt;/p&gt;


&lt;h2 id=&#34;طراحی-رابط-کاربری&#34;&gt;طراحی رابط کاربری&lt;/h2&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  بوجه‌ای به غیر از وقت خودم برای اجرای این ایده نداشتم، برای همین نمی‌توانستم از دوستان طراح رابط کاربری، کمک بگیرم. این بود که خودم دست به کار شدم و همین موضوع باعث شد تا سه بار طراحی اپلیکیشن عوض بشود، برای راحتی کار تصمیم گرفتم از استاندارد &lt;a href=&#34;https://www.google.com/design/spec/material-design/introduction.html&#34;&gt;Material Design&lt;/a&gt;   پیروی کنم، همچنین رابط کاربری اپلیکیشن‌های زیادی را بررسی کردم، اما طراحی این برنامه کمی با اپلیکیشن‌های پیام رسان دیگر متفاوت بود. چرا که کاربر پیامی را برای شخصی ارسال می‌نمود و در شرایط خاصی به دست شخص مورد نظر می‌رسید، در این صورت اگر شبیه به تایم‌لاین اپلیکیشن‌های پیام رسان طراحی می‌شد، وقتی کاربر پیامی را برای شخص مورد نظر ارسال می‌کرد، ناخودآگاه فکر می‌کرد که مثل اپلیکیشن‌های پیام رسان این پیام برای شخص مقابل ارسال شده است، به همین دلیل به شیوه‌ای متفاوت باید طراحی می‌شد، برای این که رابط‌ کاربری زیباتری داشته باشد تصمیم گرفتم هر کاربر تم خاصی داشته، تا کاربر نیز این تفاوت رنگ را حس کرده و تمایز پیام‌ها را بهتر درک کند، در مرحله‌ی اول تلپاتی‌ها و پیام‌های منطبق شده در یک قسمت در قالب &lt;a href=&#34;https://www.google.com/design/spec/components/cards.html&#34;&gt;Card View&lt;/a&gt; طراحی شد.
&lt;/p&gt;

&lt;figure class=&#34;coolfig&#34;
        style=&#34;width:250px&#34;
        &gt;
    
        &lt;img src=&#34;http://atahani.com/images/telepathy/design_step_1.png&#34;  /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h5 class=&#34;coolimage_header&#34;&gt;صفحه‌ی اصلی برنامه در مرحله‌ی اول&lt;/h5&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;

&lt;p align=&#34;justify&#34;&gt;
  در قدم دوم متوجه شدم بهتر است دو قسمت مجزا برای تلپاتی‌های ارسال شده و پیام‌های منطبق شده در نظر گرفت، همچنین نمایش پیام‌های منطبق شده به این روش کار درستی نبود چرا که اطلاعات کاربرها به صورت متوالی تکرار می‌شد، برای همین تصمیم گرفتم این قسمت همانند اپلیکیشن‌های پیام رسان طراحی شود، چرا که کاربرها به این سبک عادت داشته و دقیقا تمایز پیام‌های خود و شخص مقابل را متوجه خواهند شد. حتی از رنگ تم هر شخص استفاده کردم تا کاربر بهتر متوجه بشود.
&lt;/p&gt;

&lt;figure class=&#34;coolfig&#34;
        style=&#34;width:250px&#34;
        &gt;
    
        &lt;img src=&#34;http://atahani.com/images/telepathy/design_step_2_1.png&#34;  /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h5 class=&#34;coolimage_header&#34;&gt;پیام‌های منطبق شده صفحه‌ی اول&lt;/h5&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;

&lt;figure class=&#34;coolfig&#34;
        style=&#34;width:250px&#34;
        &gt;
    
        &lt;img src=&#34;http://atahani.com/images/telepathy/design_step_2_2.png&#34;  /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h5 class=&#34;coolimage_header&#34;&gt;پیام‌ها یک شخص در صفحه‌ی‌ دوم&lt;/h5&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;

&lt;p align=&#34;justify&#34;&gt;
  برای آشنایی با اپلیکیشن به کمک خواهر عزیزم یک ویدیوی کوتاه با افتر افکت تهیه کردیم تا کاربران بهتر با ایده‌ی اپلیکیشن تعامل برقرار کنند، با این حال خیلی از کاربران حتی کسانی که خودم از نزدیک نحوه‌ی کار با اپلیکیشن را آموزش دادم نمی‌توانستند به درستی از اپلیکیشن استفاده کنند، بزرگترین مشکل این بود که می‌دیدم کاربر به جای جست‌وجو در قسمت دوستان در قسمت پیام‌ها نام شخص مورد نظر را جست‌وجو می‌کرد و خوب قاعدتاً نتیجه‌ای نمی‌گرفت، برای همین آمدم و به صورت کلی آیکون جست‌وجو را در قسمت پیام‌ها و تلپاتی‌ها حذف کردم و قسمت دوستان را نیز اول قرار دادم، همچنین از  &lt;a href=&#34;https://www.google.com/design/spec/patterns/empty-states.html&#34;&gt;Empty State&lt;/a&gt; ها برای آموزش کاربر استفاده کرده تا کاربر کمتر گیج شود، اما این کار نیز کافی نبود &amp;hellip;
&lt;/p&gt;

&lt;figure class=&#34;coolfig&#34;
        style=&#34;width:250px&#34;
        &gt;
    
        &lt;img src=&#34;http://atahani.com/images/telepathy/design_step_3_1.png&#34;  /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h5 class=&#34;coolimage_header&#34;&gt;جابجایی قسمت دوستان&lt;/h5&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;

&lt;figure class=&#34;coolfig&#34;
        style=&#34;width:250px&#34;
        &gt;
    
        &lt;img src=&#34;http://atahani.com/images/telepathy/design_step_3_2.png&#34;  /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h5 class=&#34;coolimage_header&#34;&gt;آموزش کاربر به وسیله‌ی Empty State ها&lt;/h5&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;h2 id=&#34;اپلیکیشن-های-ارتباطی-در-ایران&#34;&gt;اپلیکیشن‌های ارتباطی در ایران&lt;/h2&gt;

&lt;p align=&#34;justify&#34;&gt;
  
شاید بتوان گفت، پر چالش‌ترین رشته در فضای آی‌تی ایران، فعالیت در اپلیکیشن‌های پیام‌رسان و ارتباطی دانست. چرا که مردم ایران به صورت افراطی درگیر این سرویس‌ها می‌شوند، هر شخصی چندین اپلیکیشن پیام‌رسان را بر روی گوشی خود نصب کرده، و به صورت متداول از آن استفاده می‌کند، آنها انتظارات خیلی بالایی دارند چرا که از سرویس‌های خوبی مثل تلگرام استفاده می‌کنند، همچنین با وجود محدودیت‌های حکومتی، فیلترینگ و مشکلات دیگر که همگی ما هر روزه درگیر آن هستیم، به نظر من فعالیت در این حوزه خیلی پر ریسک و دردسرساز است و همچنین کاربران نیز به این گونه سرویس‌های داخلی اعتماد نداشته و همیشه نگران حفظ حریم شخصی‌شان هستند. یعنی در کل به وجود آورندگان این گونه سرویس‌ها باید آنقدر هزینه، وقت و نیروی انسانی سرمایه گذاری بکنند تا در عین اعتماد سازی، انتظارات کاربران را برآورده ساخته و سهم خوبی از بازار را بدست‌آورند که در این صورت نیز امکان دارد درگیر مقررات حکومتی شوند !

&lt;/p&gt;


&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  
پس توصیه من به شما این است که اگر در ایران هستید بهتر است وقت و انرژی خود را در حوزه‌های دیگری سرمایه گذاری کنید !

&lt;/p&gt;
&lt;/p&gt;

&lt;h2 id=&#34;نظرات-کاربران&#34;&gt;نظرات کاربران&lt;/h2&gt;

&lt;p align=&#34;justify&#34;&gt;
  
علت اصلی افزایش کاربران سرویس در این مدت زمان کوتاه قرار گرفتن برنامه در تازه‌های برگزیده‌ی کافه‌بازار بود، نظرات کاربران به اصطلاح خیلی صفر/ صدی بود، یا اصلاً باهاش حال نکرده بودند یا اینکه خیلی دوست ‌داشته بودند، عده‌ای هم فکر کردند که این برنامه قراره جایگزین تلگرام بشود، یعنی در کل ایده اپلیکیشن را نگرفته بودند، استفاده از حساب کاربری گوگل هم برای احراز هویت کاربران خود مشکلات زیادی به همراه داشت، چرا که بعضی از کاربرها، گوگل پلی خود را به روز نکرده بودند و انتظار داشتند برنامه به درستی کار کند و این مشکل را از سرویس می‌دانستند.

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  
در کل فهمیدم که کار کردن بر روی سرویس‌هایی که مخاطبش عموم مردم هستند به مراتب سخت‌تر است، چرا که کاربرهایی خواهی داشت با افکار و انتظارات عجیب و غریب و همین باعث میشه خیلی سخت بتوان نیاز‌های کاربر خود را تشخیص داده و برآورده سازید.
درسی که از این قسمت گرفتم این بود که راضی نگه داشتن قشر خاصی از جامعه، راحت‌تر از این است که بخواهی سرویسی برای عموم مردم درست کرده و انتظارات گوناگون آن‌ها را برآورده سازی.

&lt;/p&gt;


&lt;h2 id=&#34;استارتاپ-و-یا-کسب-و-کار&#34;&gt;استارتاپ و یا کسب‌و‌کار&lt;/h2&gt;

&lt;p align=&#34;justify&#34;&gt;
  
این پروژه اصلاً استارتاپ تلقی نمی‌شود، ولی خوب می‌خواهم به یک سری نکاتی اشاره کنم، تا قبل از اجرای این سرویس فکر می‌کردم می‌توان یک نفره سرویسی را ایجاد کرده و بر مبنای آن کسب‌و‌کاری را بنا کرد ! ولی در عمل متوجه شدم درسته که شما می‌توانید با سرمایه‌ای اندک که ( بیشتر وقت شماست ) سرویسی را به نسبت قابل قبول پیاده‌سازی کنید ولی موفقیت یک کسب‌وکار همانند یک کارخانه‌ی تولیدی فقط از تکنولوژی ماشین‌الات و تکنسین‌ها به وجود نمی‌آید. هسته اصلی یک کسب‌وکار تشخیص نیاز کاربر و برآورده کردن آن است، پس من به صرف داشتن تخصص در زمینه اجرایی کردن یک ایده نمی‌توانم کسب‌و‌کاری موفق داشته باشم.

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  
در کل به این نتیجه رسیدم که کسب‌و‌کارهای تکنولوژی محور باید تیم توسعه‌دهنده‌ی محصول در کنار تیم کسب‌وکار فعالیت و تعامل داشته باشند تا بتوانند نیاز کاربران را تشخیص داده و به درستی به آن پاسخ بدهند و براساس نیاز کاربران آنقدر تغییرات در سیستم به وجود بیاورند تا به نتیجه‌ی مطلوب برسند، پس این کار یک فرآیند همیشگی خواهد بود، این مطلب مهمی است که افراد بی اطلاع مثل خوده من به آن توجه نمی‌کنند !

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  
خیلی مواقع افراد بی‌اطلاع ایمیل‌هایی با این عنوان برای توسعه دهندگان ارسال می‌کنند، مثل : اپلیکیشن تلگرام با همین خصوصیات چند ؟! یا فروشگاه اینترنتی مثل دیجی‌کالا به همراه اپلیکیشن اندروید، iOS و ویندوز فون چند ؟!!  وقتی چنین ایمیلی دریافت می‌کنیم خیلی خندمون می‌گیره، ولی خوده ما هم خیلی وقت‌ها به دلیل ناآشنایی و نداشتن دید کافی فکر می‌کنیم راه اندازی یک کسب‌وکار، کاری ساده‌ است و می‌توانیم به راحتی انجام بدهیم.

&lt;/p&gt;


&lt;h2 id=&#34;کمینه-محصول-پذیرفتنی-mvp&#34;&gt;کمینه محصول پذیرفتنی ( MVP )&lt;/h2&gt;

&lt;p align=&#34;justify&#34;&gt;
  
یکی دیگر از اشتباهات بزرگ من در پروژه‌ی تلپاتی این بود که قبل از اینکه درست بفهمم این ایده کاربردی از آب در می‌آید یا نه ؟! چندین ماه وقت صرف کردم تا این اپلیکیشن با آن استانداردهای ذهنی که داشتم مانند : دو زبانه بودن، بهینه سازی برای تبلت و یا خصوصیات خاص دیگری که برای ایده الزامی نبود، آماده شده و در اختیار کاربران قرار گیرد ! دقیقاً به موضوع MVP توجهی نداشتم که باید اول نمونه اولیه از سرویس را هرچند ناقص ارائه کرده تا بازخوردهای اولیه را دریافت و بعد از آن در صورت خوب بودن روی بهبود سرویس وقت گذاشته شود !

&lt;/p&gt;


&lt;h2 id=&#34;سخن-آخر&#34;&gt;سخن آخر&lt;/h2&gt;

&lt;p align=&#34;justify&#34;&gt;
  &lt;p&gt;این بود تجربیات عمومی من در اجرایی کردن این ایده. در روزهای آتی سورس پروژه را به صورت کامل منتشر خواهم کرد، همانند &lt;a href=&#34;https://faranesh.com/programming/14863-docker-in-action&#34;&gt;دوره آشنایی با داکر&lt;/a&gt;، به مرور تجربیاتی که در پیاده سازی قسمت‌های مختلف این پروژه به دست آوردم را به اشتراک خواهم گذاشت.&lt;/p&gt;

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  
پ‌ن : این اولین تجربه‌ی من در نوشتن پست وبلاگی بود، شاید که نه حتماً مشکلات زیادی از نظر نگارشی دارد، از اینکه وقت گذاشتید متشکرم 😀

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  شما می‌توانید برای اطلاع از آخرین نوشته‌ها و فعالیت‌ها، من را در &lt;a href=&#34;https://twitter.com/atahani&#34;&gt;توییتر&lt;/a&gt; فالو کنید و یا مشترک &lt;a href=&#34;http://atahani.com/index.xml&#34;&gt;فید این بلاگ&lt;/a&gt; شوید.
&lt;/p&gt;

</description>
    </item>
    
    <item>
      <title>درباره من</title>
      <link>http://atahani.com/about/</link>
      <pubDate>Mon, 29 Feb 2016 14:49:50 +0000</pubDate>
      
      <guid>http://atahani.com/about/</guid>
      <description>&lt;p&gt;احمد طحانی هستم، در نوجوانی جذب  دوره‌های شبکه بر پایه تکنولوژی مایکروسافت شدم، بعد با ورود به دانشگاه در رشته‌ی نرم‌افزار عاشق برنامه‌نویسی شدم، چون عشق مایکروسافت بودم، از دات‌نت شروع کردم، همیشه این رویا را در ذهن داشتم که یک وب‌سایتی مثل alibaba.com داشته باشم، حتی برای عملی کردن این هدف یک ترم مرخصی گرفتم، خیلی خنده داره چرا که فکر می‌کردم می‌توانم به تنهایی در طول این زمان همچنین پروژه‌ای را بنویسم !&lt;/p&gt;

&lt;p&gt;اواخر دانشگاه با تکنولوژی‌های متن‌باز آشنا شدم و پروژه‌ی نهایی خود را با Node.js و mongoDB نوشتم، بعد از اتمام خدمت سربازی در نیروی راهنمایی‌و‌رانندگی، به صورت جدی مشغول یادگیری تکنیک‌های مختلفی شدم، از برنامه‌نویسی اندروید گرفته تا توسعه بک‌اند تا سرویس‌های تحت وب، از بین چندین پروژه‌ای که به صورت انفرادی بر روی آن کار می‌کردم، یکی از آنها با نام تلپاتی به صورت کامل پیاده سازی و اجرا شد، که آن نیز به دلایل فراوان متوقف گردید، در مقابل این شکست به اندازه چندین سال تجربه بدست آوردم.&lt;/p&gt;

&lt;p&gt;به نسبت از دوستان فعال برنامه‌نویس، خیلی دیر وارد این حوزه شدم، اما چون با علاقه پیگیر هستم، امیدوارم بتوانم این عقب افتادگی را به قدری جبران کنم.&lt;/p&gt;

&lt;p&gt;در حال حاضر تصمیم گرفتم بیشتر بر روی زبان انگلیسی و یادگیری زبان برنامه‌نویسی Go تمرکز داشته باشم، همچنین هر زمانی که وقت داشته باشم دوست دارم تکنیک‌های جدیدی را که یادگرفتم آموزش بدهم.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>