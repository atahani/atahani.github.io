<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on بلاگ احمد طحانی</title>
    <link>http://atahani.com/tags/docker/</link>
    <description>Recent content in Docker on بلاگ احمد طحانی</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fa</language>
    <copyright>Ahmad Tahani</copyright>
    <lastBuildDate>Wed, 29 Jun 2016 20:09:42 +0430</lastBuildDate>
    <atom:link href="http://atahani.com/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>راه‌حلی برای مشکلات npm</title>
      <link>http://atahani.com/npm_private_server</link>
      <pubDate>Wed, 29 Jun 2016 20:09:42 +0430</pubDate>
      
      <guid>http://atahani.com/npm_private_server</guid>
      <description>&lt;p align=&#34;justify&#34;&gt;
  هفته پیش برای جلسه دوم کارگاه داکر (همایش آزاد رایانش ابری) یک نمونه پروژه باحال درست کردم، سمت کاربر با &lt;code&gt;Reacjs&lt;/code&gt; نوشته شده بود، بعد موقعی که می‌خواستم ایمیج داکر ازش بسازم، یه عالمه پکیج &lt;code&gt;npm&lt;/code&gt; در آن استفاده شده بود که باید دوباره دانلود می‌کرد، برای دور زدن این مشکل ( با &lt;a href=&#34;https://github.com/jteeuwen/go-bindata&#34;&gt;go-bind-data&lt;/a&gt; ) از فایل باینری پروژه یک داکر ایمیج ساختم، خوب این راه‌حل خوبی به نظر می‌رسد چرا چون حجم ایمیج خیلی کم شد (چیزی حدود ۱۱ مگ) ! ولی مشکلی که هست در بحث &lt;a href=&#34;https://en.wikipedia.org/wiki/Continuous_integration&#34;&gt;Continuous integration&lt;/a&gt; باید کل پروژه به صورت اتوماتیک ساخته شده، تست و اجرا شود و در صورت اوکی بودن، باینری آن تولید و بعد ایمیج آن ساخته و به رجیستری منتقل و اجرا شود.
&lt;/p&gt;


&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  از این بحث‌ها که بگذریم، مشکل گرفتن ماژول‌های &lt;code&gt;npm&lt;/code&gt; چه در &lt;code&gt;CI&lt;/code&gt; و چه به صورت &lt;code&gt;local&lt;/code&gt; در ایران عزیزمون به خاطر بحث فیلتر‌نت همیشگی بوده، بهترین راه‌حل موجود این است که شما یک &lt;code&gt;NPM cach server&lt;/code&gt; ایجاد کنید، خوشبختانه راه اندازی چنین سرویسی برای خودتان خیلی ساده‌ست، مخصوصاً‌ با داکر 👊
&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  اول باید تصمیم بگیرید می‌خواهید این کش سرور کجا باشد، هر جایی که باشد مزایای خودش رو دارد، مثلاً برای شرکت‌هایی که چندین توسعه‌دهنده دارند بهترین راه این است که یک کش سرور روی سرور داخلی شرکت بیارند بالا، و بعد روی یکی از سرورهای خارج ایران هم یک کش سرور دیگه‌ای بیاورند بالا تا کش سرور داخلی به آن وصل بشود، این جوری دیگه به کل مشکل دریافت ماژول‌های &lt;code&gt;npm&lt;/code&gt; در شرکت حل خواهد شد، برای مصارف شخصی نیز اگه یه سرور شخصی دارید سه سوت با داکر کش سرور رو بیارید بالا و ازش استفاده کنید 😎
&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  آقای &lt;a href=&#34;http://keyvanfatehi.com/&#34;&gt;کیوان فاتحی&lt;/a&gt; داکر ایمیج &lt;a href=&#34;https://www.npmjs.com/package/sinopia&#34;&gt;sinopia&lt;/a&gt; رو آماده کرده‌اند، پس در سه سوت می‌شه با داکر روی سرور آورد بالا 😊
&lt;/p&gt;
&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker run --name sinopia -d -p 4873:4873 keyvanfatehi/sinopia:latest
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  بعد در ترمینال کلاینت برای ست کردن رجیستری
&lt;/p&gt;
&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;npm set registry http://SERVER_IP_ADDRESS:4873
&lt;/code&gt;&lt;/pre&gt;

&lt;p align=&#34;justify&#34;&gt;
  &lt;p&gt;حالا هنگام دریافت ماژول‌های &lt;code&gt;npm&lt;/code&gt; اگر قبلاً ماژول مورد نظر داخل سرور بود، از آنجا دریافت می‌کنید اگه هم نبود اول خودش سریع می‌گیره و بعد به سیستم شما انتقال می‌دهد ! چی از این راحت‌تر و بهتر 😬&lt;/p&gt;

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  راستی با استفاده از این روش می‌توانید ماژول‌های خصوصی &lt;code&gt;npm&lt;/code&gt; نیز داشته باشید، برای اطلاعات بیشتر می‌توانید به &lt;a href=&#34;https://github.com/kfatehi/docker-sinopia&#34;&gt;مخزن&lt;/a&gt; آن مراجعه کنید.
&lt;/p&gt;

</description>
    </item>
    
    <item>
      <title>docker private registry در سه سوت</title>
      <link>http://atahani.com/docker-private-registry</link>
      <pubDate>Fri, 20 May 2016 23:24:06 +0430</pubDate>
      
      <guid>http://atahani.com/docker-private-registry</guid>
      <description>&lt;p align=&#34;justify&#34;&gt;
  پارسال با ابزار Docker آشنا شدم و برای اینکه مفاهیم از کلم نپره یه دوره‌ آموزشی با عنوان &lt;a href=&#34;https://faranesh.com/programming/14863-docker-in-action&#34;&gt;آشنایی و استفاده از داکر&lt;/a&gt; تهیه کردم، استقبال خوبی هم ازش شد 😊 همان طور که می‌دانید شرکت داکر سرویس داکر هاب را برای ایران مسدود کرده و عملاً با IP ایران نمی‌توانیم ایمیجی دریافت کنیم  😐 دوستان زیادی از جمله &lt;a href=&#34;https://twitter.com/miladkdz&#34;&gt;میلاد&lt;/a&gt; خیلی پگیر این موضوع هستند، با تمام این تلاش‌ها چون قوانین تحریماتی آمریکا هنوز پا برجاست، شرکت داکر همانند سایرین نمی‌تواند مغایر قانون رفتار کند!
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  نحوه‌ی درآمد شرکت داکر به گونه‌ای است که تمام هسته‌ی نرم‌افزاری خودش را به صورت متن‌باز در &lt;a href=&#34;https://github.com/docker&#34;&gt;گیت‌هاب&lt;/a&gt; قرار می‌دهد، یکی از این مخزن‌ها &lt;a href=&#34;https://github.com/docker/distribution&#34;&gt;distribution&lt;/a&gt; است، که خیلی به کار ما می‌آید چرا که هم از طرف داکر تحریم هستیم و هم اینکه برایمان سخت است که برای private image ها بخواهیم پول دلاری پرداخت کنیم.
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  کانفیگ و پیاده سازی Private Registry در ورژن ۲ آن خیلی راحت شده، البته اگر &lt;a href=&#34;https://github.com/docker/distribution/blob/master/docs/deploying.md&#34;&gt;داکیومنت&lt;/a&gt; آن را بخوانید نحوه‌ی کانفیگ آن یکم بد توضیح داده شده، در ادامه خیلی ساده مراحل کار توضیح داده می‌شود.
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  &lt;h3 id=&#34;یک-گواهی-tls-می-خواهیم&#34;&gt;یک گواهی TLS می‌خواهیم&lt;/h3&gt;

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  قبل از هر چیز به یک گواهی TLS احتیاج داریم، فرقی نمی‌کنه گواهی معتبر باشد یا نه ؟ در نحوه‌ی کارکرد آن تائثیری ندارد، ولی بهتر است شما از یک گواهی معتبر استفاده کنید، خوشبختانه به‌ راحتی می‌توانید از طریق &lt;a href=&#34;https://letsencrypt.org/&#34;&gt;letsencrypt&lt;/a&gt; گواهی معتبر رایگان دریافت کرد، برای اطلاعات بیشتر در مورد نحوه‌ی ایجاد کردن گواهی معتبر به &lt;a href=&#34;https://letsencrypt.org/getting-started/&#34;&gt;این آدرس&lt;/a&gt; بروید، خیلی سخت نیست!
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  &lt;h3 id=&#34;ساختن-دایرکتوری-های-مورد-نیاز&#34;&gt;ساختن دایرکتوری‌های مورد نیاز&lt;/h3&gt;

&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;$ tree /registry/
/registry/
├── auth
│   └── htpasswd
├── certs
│   ├── server.crt
│   └── server.key
├── data
└── docker-compose.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;p align=&#34;justify&#34;&gt;
  &lt;h3 id=&#34;در-نظر-گرفتن-یک-نام-کاربری-و-رمز-عبور-برای-کاربری-که-می-خواهد-به-این-registry-وصل-بشود&#34;&gt;در نظر گرفتن یک نام‌کاربری و رمز عبور برای کاربری که می‌خواهد به این registry وصل بشود&lt;/h3&gt;

&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;$ docker run --entrypoint htpasswd registry:2 -Bbn testuser testpassword &amp;gt; /registry/auth/htpasswd
&lt;/code&gt;&lt;/pre&gt;

&lt;p align=&#34;justify&#34;&gt;
  &lt;h3 id=&#34;اجرای-private-registry-به-وسیله-ی-docker-compose&#34;&gt;اجرای private registry به وسیله‌ی docker-compose&lt;/h3&gt;

&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;$ vim /registry/docker-compose.yml

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;registry:
  restart: always
  image: registry:2
  ports:
    - 443:443
  environment:
    REGISTRY_HTTP_TLS_CERTIFICATE: /certs/server.crt
    REGISTRY_HTTP_TLS_KEY: /certs/server.key
    REGISTRY_AUTH: htpasswd
    REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
    REGISTRY_AUTH_HTPASSWD_REALM: basic-realm
    REGISTRY_HTTP_ADDR: :443
    REGISTRY_HTTP_SECRET: topsecretphase
  volumes:
    - /registry/data:/var/lib/registry
    - /registry/certs:/certs
    - /registry/auth:/auth
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;$ docker-compose up -d
&lt;/code&gt;&lt;/pre&gt;

&lt;p align=&#34;justify&#34;&gt;
  &lt;h3 id=&#34;نحوه-ی-لاگین-کردن-به-private-registry&#34;&gt;نحوه‌ی لاگین کردن به private registry&lt;/h3&gt;

&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;$ docker login https://docker.example.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p align=&#34;justify&#34;&gt;
  &lt;h3 id=&#34;نحوه-ی-tag-کردن-یک-ایمیج-و-ارسال-آن-به-registry&#34;&gt;نحوه‌ی Tag کردن یک ایمیج و ارسال آن به registry&lt;/h3&gt;

&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;$ docker pull golang:1.6 &amp;amp;&amp;amp; docker.example.com/testuser/golang
$ docker push docker.example.com/testuser/golang
&lt;/code&gt;&lt;/pre&gt;

&lt;p align=&#34;justify&#34;&gt;
  خوب پس کار زیاد سختی هم نبود، تازه شما می‌توانید کار جالب‌تری هم انجام بدهید، private registry یک قابلیتی دارد به عنوان &lt;a href=&#34;https://github.com/docker/distribution/blob/master/docs/mirror.md&#34;&gt;mirror&lt;/a&gt; که برای کش کردن ایمیج‌ها در سرور داخلی یک شرکت در نظر گرفته شده است تا base image هایی که کارمندان یک شرکت استفاده می‌کند در آن registry کش بشود، خوب وقتی شما چنین قابلیتی را می‌بینید صددرصد با خود می‌گویید چه خوب !! می‌شود از این خصوصیت برای دوز زدن تحریم استفاده کرد، یه سرور خارجی داشته باشیم همه‌ی base image ها داخل آن کش بشود و بعد از اینجا بهش متصل بشویم، درسته این ایده تقریباً عملی هست، ولی مشکلی که وجود دارد این است که داکر برای جستجو داخل image ها و به طور کلی index کردن آن به دامین index.docker.com متصل می‌شود، پس باز تحریم این جا جلوی شما را می‌گیرد، ولی خوب همین که بتوانید از طریق آن base image ها با حجم بالا را بدون proxy دریافت کنید، بد نیست، پس اگه فقط index.docker.com را بزارید پشت proxy دیگه کل مشکل تحریم بر طرف خواهد شد.(امیدوارم به زودی زود تحریم‌های فناوری برداشته بشود!)
&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  &lt;h2 id=&#34;اجرای-private-registry-در-حالت-mirror&#34;&gt;اجرای private registry در حالت mirror&lt;/h2&gt;

&lt;/p&gt;


&lt;p align=&#34;justify&#34;&gt;
  برای اجرای private registry در حالت mirror کافیه این فایل را ایجاد کرده و بعد با docker-compose اجرا کنید
&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;$ vim /registry/docker-compose.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;registry:
  restart: always
  image: registry:2
  ports:
    - 443:443
  environment:
    REGISTRY_HTTP_TLS_CERTIFICATE: /certs/server.crt
    REGISTRY_HTTP_TLS_KEY: /certs/server.key
    REGISTRY_HTTP_ADDR: :443
    REGISTRY_HTTP_SECRET: topsecretphase
    REGISTRY_PROXY_REMOTEURL: https://registry-1.docker.io
  volumes:
    - /registry/data:/var/lib/registry
    - /registry/certs:/certs
    - /registry/auth:/auth
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;$ docker-compose up -d
&lt;/code&gt;&lt;/pre&gt;

&lt;p align=&#34;justify&#34;&gt;
  در سمت کلاینت باید docker deamon با این آپشن‌ها اجرا بشود، برای اطلاعات بیشتر به &lt;a href=&#34;https://docs.docker.com/engine/admin/configuring/&#34;&gt;این آدرس&lt;/a&gt; بروید.
&lt;/p&gt;


&lt;pre&gt;&lt;code&gt;$ vim /etc/default/docker
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;DOCKER_OPTS=&amp;quot;--registry-mirror=https://docker. example.com&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;$ service docker restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p align=&#34;justify&#34;&gt;
  &lt;p&gt;نکته: برای این که ببینید در هنگام گرفتن یک base image چه اتفاقی می‌افتد باید docker daemon را در &lt;a href=&#34;https://docs.docker.com/engine/admin/configuring/#daemon-debugging&#34;&gt;حالت دیباگ&lt;/a&gt; اجرا کنید، اگه دقت کنید هنگام جستوجو، داکر به index.docker.com رجوع می‌کند که تحریم است، ولی به هنگام گرفتن یک base image اولویت با registery ای است که شما تنظیم کرده‌اید پس اگر آن base image در رجیستری شما نبود اول از docker hub گرفته می‌شود و بعد به کلاینت منتقل می‌شود!&lt;/p&gt;

&lt;/p&gt;


&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  
&lt;/p&gt;
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>