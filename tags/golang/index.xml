<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on بلاگ احمد طحانی</title>
    <link>http://atahani.com/tags/golang/</link>
    <description>Recent content in Golang on بلاگ احمد طحانی</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fa</language>
    <copyright>Ahmad Tahani</copyright>
    <lastBuildDate>Thu, 28 Apr 2016 23:56:38 +0430</lastBuildDate>
    <atom:link href="http://atahani.com/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>شروع دوستی با زبان Go</title>
      <link>http://atahani.com/golang-intro</link>
      <pubDate>Thu, 28 Apr 2016 23:56:38 +0430</pubDate>
      
      <guid>http://atahani.com/golang-intro</guid>
      <description>&lt;p align=&#34;justify&#34;&gt;
  حدود ۶ ماه پیش از طریق دوستان توییتری با زبان Go آشنا شدم و بعد از آن در اولین فرصت روی یادگیری این زبان عالی و خوش‌دست وقت گذاشتم، الان بعد از دو ماه آشنایی توانستم یه &lt;a href=&#34;https://github.com/atahani/golang-rest-api-sample&#34;&gt;REST API به صورت نمونه (همراه با تکنیک‌های OAuth)&lt;/a&gt; به وسیله‌ی این زبان پیاده سازی کنم، از انتخابی که کردم فوق‌العاده خوشحالم 😉
&lt;/p&gt;


&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  حالا تصمیم گرفتم مطلبی در مورد زبان Go بنویسم، سعی می‌کنم با دانش و اطلاعاتی که در این چند ماه بدست آوردم بگم چرا زبان Go انتخاب خوبی به حساب می‌آید و در صورت قانع شدن چه طوری می‌توانیم با این زبان دوست بشویم!
&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  &lt;h2 id=&#34;چرا-زبان-go:48788de05cdfb050d709e804d728f00a&#34;&gt;چرا زبان Go ؟&lt;/h2&gt;

&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  &lt;h4 id=&#34;اول-بگیم-چه-کسانی-زبان-go-را-بوجود-آورده-اند:48788de05cdfb050d709e804d728f00a&#34;&gt;اول بگیم چه کسانی زبان Go را بوجود آورده اند !&lt;/h4&gt;

&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  تعدادی آدم خیلی خفن و باهوش از جمله &lt;a href=&#34;https://en.wikipedia.org/wiki/Ken_Thompson&#34;&gt;Ken Thompson&lt;/a&gt; و یا &lt;a href=&#34;https://en.wikipedia.org/wiki/Rob_Pike&#34;&gt;Rob Pike&lt;/a&gt; برای رفع نیازهای خودشان این زبان را بوجود آوردند، در کل چنین هدف‌هایی را دنبال می‌کردند:
&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;سریع کامپایل شود !&lt;/li&gt;
&lt;li&gt;کارایی بالایی داشته باشید.&lt;/li&gt;
&lt;li&gt;بتوان از توان پردازشی سیستم‌های فعلی ( چند هسته‌ای ) بهره‌ی لازم را برد.&lt;/li&gt;
&lt;li&gt;مدیریت روندهای همزمان concurrency راحت‌تر شود.&lt;/li&gt;
&lt;li&gt;با شبکه بیگانه نباشد، بتوان به راحتی از آن برای وب استفاده کرد.&lt;/li&gt;
&lt;li&gt;سینتکس تمیز و راحتی داشته باشد.&lt;/li&gt;
&lt;li&gt;به راحتی بتوان فایل کامپایل شده‌اش را روی سیستم‌عامل‌های مختلف اجرا کرد.&lt;/li&gt;
&lt;/ul&gt;

&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  خوب تقریباً خصوصیات زبان Go گفته شد 😂 ولی در کل این اهداف اصلی بوجود آمدن این زبان بود، شاید هم چند مورد از قلم افتاده باشه، به هر حال آدم‌های کار درستی مثل &lt;a href=&#34;https://en.wikipedia.org/wiki/Robert_Griesemer&#34;&gt;Robert Griesemer&lt;/a&gt; بیکار نبودند که چنین زبانی را به وجود بیاورند!
&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  &lt;h4 id=&#34;کی-پشت-این-زبان-هست-متن-بازه:48788de05cdfb050d709e804d728f00a&#34;&gt;کی پشت این زبان هست ؟! متن بازه ؟&lt;/h4&gt;

&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  چون بیشتر بوجود آورندگان این زبان در شرکت گوگل کار می‌کردند، گوگل پشت این زبان هست و به صورت کاملاً متن باز در دسترس همه قرار داده، پس نباید نگران پشتیبانی و یا مرگ این زبان باشیم!
&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  &lt;h4 id=&#34;آیا-زبان-go-شی-گراست:48788de05cdfb050d709e804d728f00a&#34;&gt;آیا زبان Go شی‌گراست ؟&lt;/h4&gt;

&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  این سوال خیلی از کسانی هست که می‌خواهند با این زبان دوست بشوند، در جواب می‌توان گفت هم آره و هم نه، آری از این نظر که شما می‌توانید با استفاده از مفاهیم Types و Method هایی که برای آن در نظر می‌گیرید به گونه‌ای مثل شی‌گرایی عمل کنید، ولی در عمل که وارد این زبان می‌شوید می‌بینید که این زبان شما را محدود به مفاهیم شی‌گرایی مثل کلاس و یا وراثت نکرده است، به عنوان مثال Custom Type ها و مبحث Interface به شما کمک می‌کند به راحتی از لایبری‌های built in خود زبان Go استفاده‌های جالبی داشته باشید، در کل تا ازش استفاده نکنید نمی‌توانید بفهمید که چه قدر می‌توان در عین سادگی flexible عمل کرد!
&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  &lt;h4 id=&#34;نحوه-ی-انتشار-و-به-روز-رسانی-زبان:48788de05cdfb050d709e804d728f00a&#34;&gt;نحوه‌ی انتشار و به روز رسانی زبان&lt;/h4&gt;

&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  این زبان در نوامر سال ۲۰۰۹ به صورت عمومی منتشر شده و تا سال ۲۰۱۲ بر روی بهبود و طراحی آن کار شده، بعد از انتشار ورژن ۱ آن دیگه استیبل شده و تغییراتی روی لایبری‌های اصلی آن انجام نگرفته، تقریباً هر شش ماه ورژن جدیدی از آن منتشر می‌شود، پس مثل Node.js این جوری نیست که هفته‌ای یه ورژن منتشر کنه!
&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  &lt;h4 id=&#34;زبان-کامپیایلی:48788de05cdfb050d709e804d728f00a&#34;&gt;زبان کامپیایلی&lt;/h4&gt;

&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  زبان‌هایی مثل پایتون و یا جاوااسکریپت اصطلاحاً dynamically typed هستند، چون در هنگام اجرا تفسیر شده و به کد ماشین تبدیل می‌شوند به گونه‌ای هستند که نوع مقادیر می‌تواند به صورت پویا باشد، این موضوع شاید خوب به نظر بیاید ولی بیشتر مواقع دردسر ساز است، در مقابل این نوع شیوه زبان‌هایی مثل ++C و یا جاوا static typed بوده و یا اصطلاحاً می‌گویند کامپایلی هستند، مشکلات زبان‌های تفسیری را نداشته ولی در عوض زمان کامپایل آنها در پروژه‌های بزرگ به صروت چشم گیری محسوس است، زبان Go در عین static typed بودن، آمده از تکنیک‌هایی استفاده کرده تا این زمان کامپایل حتی در پروژه‌های خیلی بزرگ به چند ثانیه برسد ! و جالب‌تر اینکه وقتی کامپایل شد شما می‌توانید روی سیستم عامل‌های مختلف بدون داشتن نرم‌افزار خاصی اجرایش کنید.
&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  &lt;h4 id=&#34;حالا-که-می-گی-اینقدر-خوبه-کی-ازش-استفاده-می-کنه:48788de05cdfb050d709e804d728f00a&#34;&gt;حالا که می‌گی اینقدر خوبه کی ازش استفاده می‌کنه؟&lt;/h4&gt;

&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  قسمت هیجان انگیز ماجرا این هست که خیلی از شرکت‌های بزرگ دنیا با استفاده از زبان Go سرویس‌ها فوق‌العاده با کیفیت و با کارایی بالا نظیر داکر، یوتیوب، دراپ‌باکس، MongoD‌B توسعه داده‌اند، پس مطمئن باشید از همه لحاظ این زبان امتحان خودش را در Scale های بالا پس داده است، برای مشکلاتش راه‌حل‌های منطقی و خوبی ارائه شده، کامیونیتی فوق‌العاده فعالی داره، و مطمئن باشید در همین ایران هم آینده درخشانی خواهد داشت، کما اینکه همین الان شرکت‌هایی هستند که از این زبان برای توسعه سرویس‌های خودشان استفاده می‌کنند!
&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  برای اطلاعات بیشتر راجع به این زبان می‌توانید &lt;a href=&#34;https://golang.org/doc/faq&#34;&gt;سوالات متداول در وب‌سایت خود زبان Go&lt;/a&gt; را بخوانید، یکم تخصصی گفته ولی کامل و جامع راجع به زوایای مختلف این زبان نوشته!
&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;p align=&#34;justify&#34;&gt;
  👈 در حد سواد و اطلاعاتی که داشتم در مورد این زبان نوشتم، قول می‌دهم به زودی در ادامه‌ی این پست راجع به منابع آموزشی این زبان مطلبی بنویسم 😊!
&lt;/p&gt;
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>